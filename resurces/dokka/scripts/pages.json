[{"name":"abstract class AbstractSQLRepository","description":"social.friendship.infrastructure.persistence.sql.AbstractSQLRepository","location":"friendship-service/social.friendship.infrastructure.persistence.sql/-abstract-s-q-l-repository/index.html","searchKeys":["AbstractSQLRepository","abstract class AbstractSQLRepository","social.friendship.infrastructure.persistence.sql.AbstractSQLRepository"]},{"name":"abstract fun acceptFriendshipRequest(request: FriendshipRequest)","description":"social.friendship.application.FriendshipRequestProcessor.acceptFriendshipRequest","location":"friendship-service/social.friendship.application/-friendship-request-processor/accept-friendship-request.html","searchKeys":["acceptFriendshipRequest","abstract fun acceptFriendshipRequest(request: FriendshipRequest)","social.friendship.application.FriendshipRequestProcessor.acceptFriendshipRequest"]},{"name":"abstract fun addFriendship(friendship: Friendship)","description":"social.friendship.application.FriendshipProcessor.addFriendship","location":"friendship-service/social.friendship.application/-friendship-processor/add-friendship.html","searchKeys":["addFriendship","abstract fun addFriendship(friendship: Friendship)","social.friendship.application.FriendshipProcessor.addFriendship"]},{"name":"abstract fun addFriendshipRequest(friendshipRequest: FriendshipRequest)","description":"social.friendship.application.FriendshipRequestProcessor.addFriendshipRequest","location":"friendship-service/social.friendship.application/-friendship-request-processor/add-friendship-request.html","searchKeys":["addFriendshipRequest","abstract fun addFriendshipRequest(friendshipRequest: FriendshipRequest)","social.friendship.application.FriendshipRequestProcessor.addFriendshipRequest"]},{"name":"abstract fun addMessage(message: Message)","description":"social.friendship.application.MessageProcessor.addMessage","location":"friendship-service/social.friendship.application/-message-processor/add-message.html","searchKeys":["addMessage","abstract fun addMessage(message: Message)","social.friendship.application.MessageProcessor.addMessage"]},{"name":"abstract fun addUser(user: User)","description":"social.friendship.application.UserProcessor.addUser","location":"friendship-service/social.friendship.application/-user-processor/add-user.html","searchKeys":["addUser","abstract fun addUser(user: User)","social.friendship.application.UserProcessor.addUser"]},{"name":"abstract fun connect(host: String, port: String, dbName: String, username: String, password: String)","description":"social.friendship.application.ConnectableRepository.connect","location":"friendship-service/social.friendship.application/-connectable-repository/connect.html","searchKeys":["connect","abstract fun connect(host: String, port: String, dbName: String, username: String, password: String)","social.friendship.application.ConnectableRepository.connect"]},{"name":"abstract fun deleteFriendship(friendshipID: Friendship.FriendshipID): Friendship?","description":"social.friendship.application.FriendshipProcessor.deleteFriendship","location":"friendship-service/social.friendship.application/-friendship-processor/delete-friendship.html","searchKeys":["deleteFriendship","abstract fun deleteFriendship(friendshipID: Friendship.FriendshipID): Friendship?","social.friendship.application.FriendshipProcessor.deleteFriendship"]},{"name":"abstract fun deleteMessage(messageID: Message.MessageID): Message?","description":"social.friendship.application.MessageProcessor.deleteMessage","location":"friendship-service/social.friendship.application/-message-processor/delete-message.html","searchKeys":["deleteMessage","abstract fun deleteMessage(messageID: Message.MessageID): Message?","social.friendship.application.MessageProcessor.deleteMessage"]},{"name":"abstract fun findAllFriendsOf(userID: User.UserID): Iterable<User>","description":"social.friendship.application.FriendshipRepository.findAllFriendsOf","location":"friendship-service/social.friendship.application/-friendship-repository/find-all-friends-of.html","searchKeys":["findAllFriendsOf","abstract fun findAllFriendsOf(userID: User.UserID): Iterable<User>","social.friendship.application.FriendshipRepository.findAllFriendsOf"]},{"name":"abstract fun findAllMessagesExchangedBetween(user1: User.UserID, user2: User.UserID): Iterable<Message>","description":"social.friendship.application.MessageRepository.findAllMessagesExchangedBetween","location":"friendship-service/social.friendship.application/-message-repository/find-all-messages-exchanged-between.html","searchKeys":["findAllMessagesExchangedBetween","abstract fun findAllMessagesExchangedBetween(user1: User.UserID, user2: User.UserID): Iterable<Message>","social.friendship.application.MessageRepository.findAllMessagesExchangedBetween"]},{"name":"abstract fun findAllMessagesReceivedBy(userID: User.UserID): Iterable<Message>","description":"social.friendship.application.MessageRepository.findAllMessagesReceivedBy","location":"friendship-service/social.friendship.application/-message-repository/find-all-messages-received-by.html","searchKeys":["findAllMessagesReceivedBy","abstract fun findAllMessagesReceivedBy(userID: User.UserID): Iterable<Message>","social.friendship.application.MessageRepository.findAllMessagesReceivedBy"]},{"name":"abstract fun getAllFriendsByUserId(userID: User.UserID): Iterable<User>","description":"social.friendship.application.FriendshipProcessor.getAllFriendsByUserId","location":"friendship-service/social.friendship.application/-friendship-processor/get-all-friends-by-user-id.html","searchKeys":["getAllFriendsByUserId","abstract fun getAllFriendsByUserId(userID: User.UserID): Iterable<User>","social.friendship.application.FriendshipProcessor.getAllFriendsByUserId"]},{"name":"abstract fun getAllFriendshipRequests(): Array<FriendshipRequest>","description":"social.friendship.application.FriendshipRequestProcessor.getAllFriendshipRequests","location":"friendship-service/social.friendship.application/-friendship-request-processor/get-all-friendship-requests.html","searchKeys":["getAllFriendshipRequests","abstract fun getAllFriendshipRequests(): Array<FriendshipRequest>","social.friendship.application.FriendshipRequestProcessor.getAllFriendshipRequests"]},{"name":"abstract fun getAllFriendshipRequestsByUserId(userID: User.UserID): Iterable<FriendshipRequest>","description":"social.friendship.application.FriendshipRequestProcessor.getAllFriendshipRequestsByUserId","location":"friendship-service/social.friendship.application/-friendship-request-processor/get-all-friendship-requests-by-user-id.html","searchKeys":["getAllFriendshipRequestsByUserId","abstract fun getAllFriendshipRequestsByUserId(userID: User.UserID): Iterable<FriendshipRequest>","social.friendship.application.FriendshipRequestProcessor.getAllFriendshipRequestsByUserId"]},{"name":"abstract fun getAllFriendshipRequestsOf(userId: User.UserID): Iterable<FriendshipRequest>","description":"social.friendship.application.FriendshipRequestRepository.getAllFriendshipRequestsOf","location":"friendship-service/social.friendship.application/-friendship-request-repository/get-all-friendship-requests-of.html","searchKeys":["getAllFriendshipRequestsOf","abstract fun getAllFriendshipRequestsOf(userId: User.UserID): Iterable<FriendshipRequest>","social.friendship.application.FriendshipRequestRepository.getAllFriendshipRequestsOf"]},{"name":"abstract fun getAllFriendships(): Array<Friendship>","description":"social.friendship.application.FriendshipProcessor.getAllFriendships","location":"friendship-service/social.friendship.application/-friendship-processor/get-all-friendships.html","searchKeys":["getAllFriendships","abstract fun getAllFriendships(): Array<Friendship>","social.friendship.application.FriendshipProcessor.getAllFriendships"]},{"name":"abstract fun getAllMessages(): Array<Message>","description":"social.friendship.application.MessageProcessor.getAllMessages","location":"friendship-service/social.friendship.application/-message-processor/get-all-messages.html","searchKeys":["getAllMessages","abstract fun getAllMessages(): Array<Message>","social.friendship.application.MessageProcessor.getAllMessages"]},{"name":"abstract fun getAllMessagesExchangedBetween(user1Id: User.UserID, user2Id: User.UserID): Iterable<Message>","description":"social.friendship.application.MessageProcessor.getAllMessagesExchangedBetween","location":"friendship-service/social.friendship.application/-message-processor/get-all-messages-exchanged-between.html","searchKeys":["getAllMessagesExchangedBetween","abstract fun getAllMessagesExchangedBetween(user1Id: User.UserID, user2Id: User.UserID): Iterable<Message>","social.friendship.application.MessageProcessor.getAllMessagesExchangedBetween"]},{"name":"abstract fun getAllMessagesReceivedByUserId(userID: User.UserID): Iterable<Message>","description":"social.friendship.application.MessageProcessor.getAllMessagesReceivedByUserId","location":"friendship-service/social.friendship.application/-message-processor/get-all-messages-received-by-user-id.html","searchKeys":["getAllMessagesReceivedByUserId","abstract fun getAllMessagesReceivedByUserId(userID: User.UserID): Iterable<Message>","social.friendship.application.MessageProcessor.getAllMessagesReceivedByUserId"]},{"name":"abstract fun getFriendship(friendshipID: Friendship.FriendshipID): Friendship?","description":"social.friendship.application.FriendshipProcessor.getFriendship","location":"friendship-service/social.friendship.application/-friendship-processor/get-friendship.html","searchKeys":["getFriendship","abstract fun getFriendship(friendshipID: Friendship.FriendshipID): Friendship?","social.friendship.application.FriendshipProcessor.getFriendship"]},{"name":"abstract fun getFriendshipRequest(friendshipRequestID: FriendshipRequest.FriendshipRequestID): FriendshipRequest?","description":"social.friendship.application.FriendshipRequestProcessor.getFriendshipRequest","location":"friendship-service/social.friendship.application/-friendship-request-processor/get-friendship-request.html","searchKeys":["getFriendshipRequest","abstract fun getFriendshipRequest(friendshipRequestID: FriendshipRequest.FriendshipRequestID): FriendshipRequest?","social.friendship.application.FriendshipRequestProcessor.getFriendshipRequest"]},{"name":"abstract fun getMessage(messageID: Message.MessageID): Message?","description":"social.friendship.application.MessageProcessor.getMessage","location":"friendship-service/social.friendship.application/-message-processor/get-message.html","searchKeys":["getMessage","abstract fun getMessage(messageID: Message.MessageID): Message?","social.friendship.application.MessageProcessor.getMessage"]},{"name":"abstract fun getUser(userID: User.UserID): User?","description":"social.friendship.application.UserProcessor.getUser","location":"friendship-service/social.friendship.application/-user-processor/get-user.html","searchKeys":["getUser","abstract fun getUser(userID: User.UserID): User?","social.friendship.application.UserProcessor.getUser"]},{"name":"abstract fun publishEvent(event: DomainEvent)","description":"social.friendship.application.KafkaProducerVerticle.publishEvent","location":"friendship-service/social.friendship.application/-kafka-producer-verticle/publish-event.html","searchKeys":["publishEvent","abstract fun publishEvent(event: DomainEvent)","social.friendship.application.KafkaProducerVerticle.publishEvent"]},{"name":"abstract fun receivedMessage(message: Message)","description":"social.friendship.application.MessageProcessor.receivedMessage","location":"friendship-service/social.friendship.application/-message-processor/received-message.html","searchKeys":["receivedMessage","abstract fun receivedMessage(message: Message)","social.friendship.application.MessageProcessor.receivedMessage"]},{"name":"abstract fun rejectFriendshipRequest(friendshipRequest: FriendshipRequest): FriendshipRequest?","description":"social.friendship.application.FriendshipRequestProcessor.rejectFriendshipRequest","location":"friendship-service/social.friendship.application/-friendship-request-processor/reject-friendship-request.html","searchKeys":["rejectFriendshipRequest","abstract fun rejectFriendshipRequest(friendshipRequest: FriendshipRequest): FriendshipRequest?","social.friendship.application.FriendshipRequestProcessor.rejectFriendshipRequest"]},{"name":"abstract fun sentMessage(message: Message)","description":"social.friendship.application.MessageProcessor.sentMessage","location":"friendship-service/social.friendship.application/-message-processor/sent-message.html","searchKeys":["sentMessage","abstract fun sentMessage(message: Message)","social.friendship.application.MessageProcessor.sentMessage"]},{"name":"abstract val dbName: String","description":"social.friendship.social.friendship.application.DatabaseCredentials.dbName","location":"friendship-service/social.friendship.social.friendship.application/-database-credentials/db-name.html","searchKeys":["dbName","abstract val dbName: String","social.friendship.social.friendship.application.DatabaseCredentials.dbName"]},{"name":"abstract val host: String","description":"social.friendship.social.friendship.application.DatabaseCredentials.host","location":"friendship-service/social.friendship.social.friendship.application/-database-credentials/host.html","searchKeys":["host","abstract val host: String","social.friendship.social.friendship.application.DatabaseCredentials.host"]},{"name":"abstract val password: String","description":"social.friendship.social.friendship.application.DatabaseCredentials.password","location":"friendship-service/social.friendship.social.friendship.application/-database-credentials/password.html","searchKeys":["password","abstract val password: String","social.friendship.social.friendship.application.DatabaseCredentials.password"]},{"name":"abstract val port: String","description":"social.friendship.social.friendship.application.DatabaseCredentials.port","location":"friendship-service/social.friendship.social.friendship.application/-database-credentials/port.html","searchKeys":["port","abstract val port: String","social.friendship.social.friendship.application.DatabaseCredentials.port"]},{"name":"abstract val username: String","description":"social.friendship.social.friendship.application.DatabaseCredentials.username","location":"friendship-service/social.friendship.social.friendship.application/-database-credentials/username.html","searchKeys":["username","abstract val username: String","social.friendship.social.friendship.application.DatabaseCredentials.username"]},{"name":"class Friendship : AggregateRoot<Friendship.FriendshipID> ","description":"social.friendship.domain.Friendship","location":"friendship-service/social.friendship.domain/-friendship/index.html","searchKeys":["Friendship","class Friendship : AggregateRoot<Friendship.FriendshipID> ","social.friendship.domain.Friendship"]},{"name":"class FriendshipRequest : AggregateRoot<FriendshipRequest.FriendshipRequestID> ","description":"social.friendship.domain.FriendshipRequest","location":"friendship-service/social.friendship.domain/-friendship-request/index.html","searchKeys":["FriendshipRequest","class FriendshipRequest : AggregateRoot<FriendshipRequest.FriendshipRequestID> ","social.friendship.domain.FriendshipRequest"]},{"name":"class FriendshipRequestSQLRepository : AbstractSQLRepository, FriendshipRequestRepository","description":"social.friendship.infrastructure.persistence.sql.FriendshipRequestSQLRepository","location":"friendship-service/social.friendship.infrastructure.persistence.sql/-friendship-request-s-q-l-repository/index.html","searchKeys":["FriendshipRequestSQLRepository","class FriendshipRequestSQLRepository : AbstractSQLRepository, FriendshipRequestRepository","social.friendship.infrastructure.persistence.sql.FriendshipRequestSQLRepository"]},{"name":"class FriendshipSQLRepository : AbstractSQLRepository, FriendshipRepository","description":"social.friendship.infrastructure.persistence.sql.FriendshipSQLRepository","location":"friendship-service/social.friendship.infrastructure.persistence.sql/-friendship-s-q-l-repository/index.html","searchKeys":["FriendshipSQLRepository","class FriendshipSQLRepository : AbstractSQLRepository, FriendshipRepository","social.friendship.infrastructure.persistence.sql.FriendshipSQLRepository"]},{"name":"class FriendshipServiceVerticle(userRepository: UserRepository, friendshipRepository: FriendshipRepository, friendshipRequestRepository: FriendshipRequestRepository, messageRepository: MessageRepository, kafkaProducer: KafkaProducerVerticle, credentials: DatabaseCredentials? = null, shouldConnectToDB: Boolean? = true) : AbstractVerticle, FriendshipService","description":"social.friendship.application.FriendshipServiceVerticle","location":"friendship-service/social.friendship.application/-friendship-service-verticle/index.html","searchKeys":["FriendshipServiceVerticle","class FriendshipServiceVerticle(userRepository: UserRepository, friendshipRepository: FriendshipRepository, friendshipRequestRepository: FriendshipRequestRepository, messageRepository: MessageRepository, kafkaProducer: KafkaProducerVerticle, credentials: DatabaseCredentials? = null, shouldConnectToDB: Boolean? = true) : AbstractVerticle, FriendshipService","social.friendship.application.FriendshipServiceVerticle"]},{"name":"class KafkaFriendshipConsumerVerticle(service: FriendshipService) : AbstractVerticle, KafkaConsumerVerticle","description":"social.friendship.infrastructure.controller.event.KafkaFriendshipConsumerVerticle","location":"friendship-service/social.friendship.infrastructure.controller.event/-kafka-friendship-consumer-verticle/index.html","searchKeys":["KafkaFriendshipConsumerVerticle","class KafkaFriendshipConsumerVerticle(service: FriendshipService) : AbstractVerticle, KafkaConsumerVerticle","social.friendship.infrastructure.controller.event.KafkaFriendshipConsumerVerticle"]},{"name":"class KafkaFriendshipProducerVerticle : AbstractVerticle, KafkaProducerVerticle","description":"social.friendship.infrastructure.controller.event.KafkaFriendshipProducerVerticle","location":"friendship-service/social.friendship.infrastructure.controller.event/-kafka-friendship-producer-verticle/index.html","searchKeys":["KafkaFriendshipProducerVerticle","class KafkaFriendshipProducerVerticle : AbstractVerticle, KafkaProducerVerticle","social.friendship.infrastructure.controller.event.KafkaFriendshipProducerVerticle"]},{"name":"class Message : AggregateRoot<Message.MessageID> ","description":"social.friendship.domain.Message","location":"friendship-service/social.friendship.domain/-message/index.html","searchKeys":["Message","class Message : AggregateRoot<Message.MessageID> ","social.friendship.domain.Message"]},{"name":"class MessageSQLRepository : AbstractSQLRepository, MessageRepository","description":"social.friendship.infrastructure.persistence.sql.MessageSQLRepository","location":"friendship-service/social.friendship.infrastructure.persistence.sql/-message-s-q-l-repository/index.html","searchKeys":["MessageSQLRepository","class MessageSQLRepository : AbstractSQLRepository, MessageRepository","social.friendship.infrastructure.persistence.sql.MessageSQLRepository"]},{"name":"class RESTFriendshipAPIVerticleImpl(service: FriendshipService) : AbstractVerticle, RESTFriendshipAPIVerticle","description":"social.friendship.infrastructure.controller.rest.RESTFriendshipAPIVerticleImpl","location":"friendship-service/social.friendship.infrastructure.controller.rest/-r-e-s-t-friendship-a-p-i-verticle-impl/index.html","searchKeys":["RESTFriendshipAPIVerticleImpl","class RESTFriendshipAPIVerticleImpl(service: FriendshipService) : AbstractVerticle, RESTFriendshipAPIVerticle","social.friendship.infrastructure.controller.rest.RESTFriendshipAPIVerticleImpl"]},{"name":"class User : Entity<User.UserID> ","description":"social.friendship.domain.User","location":"friendship-service/social.friendship.domain/-user/index.html","searchKeys":["User","class User : Entity<User.UserID> ","social.friendship.domain.User"]},{"name":"class UserSQLRepository : AbstractSQLRepository, UserRepository","description":"social.friendship.infrastructure.persistence.sql.UserSQLRepository","location":"friendship-service/social.friendship.infrastructure.persistence.sql/-user-s-q-l-repository/index.html","searchKeys":["UserSQLRepository","class UserSQLRepository : AbstractSQLRepository, UserRepository","social.friendship.infrastructure.persistence.sql.UserSQLRepository"]},{"name":"const val CONTENT: String","description":"social.friendship.infrastructure.persistence.sql.SQLColumns.MessageTable.CONTENT","location":"friendship-service/social.friendship.infrastructure.persistence.sql/-s-q-l-columns/-message-table/-c-o-n-t-e-n-t.html","searchKeys":["CONTENT","const val CONTENT: String","social.friendship.infrastructure.persistence.sql.SQLColumns.MessageTable.CONTENT"]},{"name":"const val DELETE_FRIENDSHIP_BY_ID: String","description":"social.friendship.infrastructure.persistence.sql.SQLOperation.Update.DELETE_FRIENDSHIP_BY_ID","location":"friendship-service/social.friendship.infrastructure.persistence.sql/-s-q-l-operation/-update/-d-e-l-e-t-e_-f-r-i-e-n-d-s-h-i-p_-b-y_-i-d.html","searchKeys":["DELETE_FRIENDSHIP_BY_ID","const val DELETE_FRIENDSHIP_BY_ID: String","social.friendship.infrastructure.persistence.sql.SQLOperation.Update.DELETE_FRIENDSHIP_BY_ID"]},{"name":"const val DELETE_FRIENDSHIP_REQUEST_BY_ID: String","description":"social.friendship.infrastructure.persistence.sql.SQLOperation.Update.DELETE_FRIENDSHIP_REQUEST_BY_ID","location":"friendship-service/social.friendship.infrastructure.persistence.sql/-s-q-l-operation/-update/-d-e-l-e-t-e_-f-r-i-e-n-d-s-h-i-p_-r-e-q-u-e-s-t_-b-y_-i-d.html","searchKeys":["DELETE_FRIENDSHIP_REQUEST_BY_ID","const val DELETE_FRIENDSHIP_REQUEST_BY_ID: String","social.friendship.infrastructure.persistence.sql.SQLOperation.Update.DELETE_FRIENDSHIP_REQUEST_BY_ID"]},{"name":"const val DELETE_MESSAGE_BY_ID: String","description":"social.friendship.infrastructure.persistence.sql.SQLOperation.Update.DELETE_MESSAGE_BY_ID","location":"friendship-service/social.friendship.infrastructure.persistence.sql/-s-q-l-operation/-update/-d-e-l-e-t-e_-m-e-s-s-a-g-e_-b-y_-i-d.html","searchKeys":["DELETE_MESSAGE_BY_ID","const val DELETE_MESSAGE_BY_ID: String","social.friendship.infrastructure.persistence.sql.SQLOperation.Update.DELETE_MESSAGE_BY_ID"]},{"name":"const val DELETE_USER_BY_ID: String","description":"social.friendship.infrastructure.persistence.sql.SQLOperation.Update.DELETE_USER_BY_ID","location":"friendship-service/social.friendship.infrastructure.persistence.sql/-s-q-l-operation/-update/-d-e-l-e-t-e_-u-s-e-r_-b-y_-i-d.html","searchKeys":["DELETE_USER_BY_ID","const val DELETE_USER_BY_ID: String","social.friendship.infrastructure.persistence.sql.SQLOperation.Update.DELETE_USER_BY_ID"]},{"name":"const val FROM: String","description":"social.friendship.infrastructure.persistence.sql.SQLColumns.FriendshipRequestTable.FROM","location":"friendship-service/social.friendship.infrastructure.persistence.sql/-s-q-l-columns/-friendship-request-table/-f-r-o-m.html","searchKeys":["FROM","const val FROM: String","social.friendship.infrastructure.persistence.sql.SQLColumns.FriendshipRequestTable.FROM"]},{"name":"const val ID: String","description":"social.friendship.infrastructure.persistence.sql.SQLColumns.MessageTable.ID","location":"friendship-service/social.friendship.infrastructure.persistence.sql/-s-q-l-columns/-message-table/-i-d.html","searchKeys":["ID","const val ID: String","social.friendship.infrastructure.persistence.sql.SQLColumns.MessageTable.ID"]},{"name":"const val ID: String","description":"social.friendship.infrastructure.persistence.sql.SQLColumns.UserTable.ID","location":"friendship-service/social.friendship.infrastructure.persistence.sql/-s-q-l-columns/-user-table/-i-d.html","searchKeys":["ID","const val ID: String","social.friendship.infrastructure.persistence.sql.SQLColumns.UserTable.ID"]},{"name":"const val INSERT_FRIENDSHIP: String","description":"social.friendship.infrastructure.persistence.sql.SQLOperation.Update.INSERT_FRIENDSHIP","location":"friendship-service/social.friendship.infrastructure.persistence.sql/-s-q-l-operation/-update/-i-n-s-e-r-t_-f-r-i-e-n-d-s-h-i-p.html","searchKeys":["INSERT_FRIENDSHIP","const val INSERT_FRIENDSHIP: String","social.friendship.infrastructure.persistence.sql.SQLOperation.Update.INSERT_FRIENDSHIP"]},{"name":"const val INSERT_FRIENDSHIP_REQUEST: String","description":"social.friendship.infrastructure.persistence.sql.SQLOperation.Update.INSERT_FRIENDSHIP_REQUEST","location":"friendship-service/social.friendship.infrastructure.persistence.sql/-s-q-l-operation/-update/-i-n-s-e-r-t_-f-r-i-e-n-d-s-h-i-p_-r-e-q-u-e-s-t.html","searchKeys":["INSERT_FRIENDSHIP_REQUEST","const val INSERT_FRIENDSHIP_REQUEST: String","social.friendship.infrastructure.persistence.sql.SQLOperation.Update.INSERT_FRIENDSHIP_REQUEST"]},{"name":"const val INSERT_MESSAGE: String","description":"social.friendship.infrastructure.persistence.sql.SQLOperation.Update.INSERT_MESSAGE","location":"friendship-service/social.friendship.infrastructure.persistence.sql/-s-q-l-operation/-update/-i-n-s-e-r-t_-m-e-s-s-a-g-e.html","searchKeys":["INSERT_MESSAGE","const val INSERT_MESSAGE: String","social.friendship.infrastructure.persistence.sql.SQLOperation.Update.INSERT_MESSAGE"]},{"name":"const val INSERT_USER: String","description":"social.friendship.infrastructure.persistence.sql.SQLOperation.Update.INSERT_USER","location":"friendship-service/social.friendship.infrastructure.persistence.sql/-s-q-l-operation/-update/-i-n-s-e-r-t_-u-s-e-r.html","searchKeys":["INSERT_USER","const val INSERT_USER: String","social.friendship.infrastructure.persistence.sql.SQLOperation.Update.INSERT_USER"]},{"name":"const val MISSING_FRIENDSHIP: String","description":"social.friendship.infrastructure.persistence.sql.SQLStateError.MISSING_FRIENDSHIP","location":"friendship-service/social.friendship.infrastructure.persistence.sql/-s-q-l-state-error/-m-i-s-s-i-n-g_-f-r-i-e-n-d-s-h-i-p.html","searchKeys":["MISSING_FRIENDSHIP","const val MISSING_FRIENDSHIP: String","social.friendship.infrastructure.persistence.sql.SQLStateError.MISSING_FRIENDSHIP"]},{"name":"const val RECEIVER: String","description":"social.friendship.infrastructure.persistence.sql.SQLColumns.MessageTable.RECEIVER","location":"friendship-service/social.friendship.infrastructure.persistence.sql/-s-q-l-columns/-message-table/-r-e-c-e-i-v-e-r.html","searchKeys":["RECEIVER","const val RECEIVER: String","social.friendship.infrastructure.persistence.sql.SQLColumns.MessageTable.RECEIVER"]},{"name":"const val SELECT_ALL_FRIENDSHIPS: String","description":"social.friendship.infrastructure.persistence.sql.SQLOperation.Query.SELECT_ALL_FRIENDSHIPS","location":"friendship-service/social.friendship.infrastructure.persistence.sql/-s-q-l-operation/-query/-s-e-l-e-c-t_-a-l-l_-f-r-i-e-n-d-s-h-i-p-s.html","searchKeys":["SELECT_ALL_FRIENDSHIPS","const val SELECT_ALL_FRIENDSHIPS: String","social.friendship.infrastructure.persistence.sql.SQLOperation.Query.SELECT_ALL_FRIENDSHIPS"]},{"name":"const val SELECT_ALL_FRIENDSHIP_REQUESTS: String","description":"social.friendship.infrastructure.persistence.sql.SQLOperation.Query.SELECT_ALL_FRIENDSHIP_REQUESTS","location":"friendship-service/social.friendship.infrastructure.persistence.sql/-s-q-l-operation/-query/-s-e-l-e-c-t_-a-l-l_-f-r-i-e-n-d-s-h-i-p_-r-e-q-u-e-s-t-s.html","searchKeys":["SELECT_ALL_FRIENDSHIP_REQUESTS","const val SELECT_ALL_FRIENDSHIP_REQUESTS: String","social.friendship.infrastructure.persistence.sql.SQLOperation.Query.SELECT_ALL_FRIENDSHIP_REQUESTS"]},{"name":"const val SELECT_ALL_MESSAGES: String","description":"social.friendship.infrastructure.persistence.sql.SQLOperation.Query.SELECT_ALL_MESSAGES","location":"friendship-service/social.friendship.infrastructure.persistence.sql/-s-q-l-operation/-query/-s-e-l-e-c-t_-a-l-l_-m-e-s-s-a-g-e-s.html","searchKeys":["SELECT_ALL_MESSAGES","const val SELECT_ALL_MESSAGES: String","social.friendship.infrastructure.persistence.sql.SQLOperation.Query.SELECT_ALL_MESSAGES"]},{"name":"const val SELECT_ALL_USERS: String","description":"social.friendship.infrastructure.persistence.sql.SQLOperation.Query.SELECT_ALL_USERS","location":"friendship-service/social.friendship.infrastructure.persistence.sql/-s-q-l-operation/-query/-s-e-l-e-c-t_-a-l-l_-u-s-e-r-s.html","searchKeys":["SELECT_ALL_USERS","const val SELECT_ALL_USERS: String","social.friendship.infrastructure.persistence.sql.SQLOperation.Query.SELECT_ALL_USERS"]},{"name":"const val SELECT_FRIENDSHIPS_OF_USER: String","description":"social.friendship.infrastructure.persistence.sql.SQLOperation.Query.SELECT_FRIENDSHIPS_OF_USER","location":"friendship-service/social.friendship.infrastructure.persistence.sql/-s-q-l-operation/-query/-s-e-l-e-c-t_-f-r-i-e-n-d-s-h-i-p-s_-o-f_-u-s-e-r.html","searchKeys":["SELECT_FRIENDSHIPS_OF_USER","const val SELECT_FRIENDSHIPS_OF_USER: String","social.friendship.infrastructure.persistence.sql.SQLOperation.Query.SELECT_FRIENDSHIPS_OF_USER"]},{"name":"const val SELECT_FRIENDSHIP_BY_ID: String","description":"social.friendship.infrastructure.persistence.sql.SQLOperation.Query.SELECT_FRIENDSHIP_BY_ID","location":"friendship-service/social.friendship.infrastructure.persistence.sql/-s-q-l-operation/-query/-s-e-l-e-c-t_-f-r-i-e-n-d-s-h-i-p_-b-y_-i-d.html","searchKeys":["SELECT_FRIENDSHIP_BY_ID","const val SELECT_FRIENDSHIP_BY_ID: String","social.friendship.infrastructure.persistence.sql.SQLOperation.Query.SELECT_FRIENDSHIP_BY_ID"]},{"name":"const val SELECT_FRIENDSHIP_REQUESTS_OF_USER: String","description":"social.friendship.infrastructure.persistence.sql.SQLOperation.Query.SELECT_FRIENDSHIP_REQUESTS_OF_USER","location":"friendship-service/social.friendship.infrastructure.persistence.sql/-s-q-l-operation/-query/-s-e-l-e-c-t_-f-r-i-e-n-d-s-h-i-p_-r-e-q-u-e-s-t-s_-o-f_-u-s-e-r.html","searchKeys":["SELECT_FRIENDSHIP_REQUESTS_OF_USER","const val SELECT_FRIENDSHIP_REQUESTS_OF_USER: String","social.friendship.infrastructure.persistence.sql.SQLOperation.Query.SELECT_FRIENDSHIP_REQUESTS_OF_USER"]},{"name":"const val SELECT_FRIENDSHIP_REQUEST_BY_ID: String","description":"social.friendship.infrastructure.persistence.sql.SQLOperation.Query.SELECT_FRIENDSHIP_REQUEST_BY_ID","location":"friendship-service/social.friendship.infrastructure.persistence.sql/-s-q-l-operation/-query/-s-e-l-e-c-t_-f-r-i-e-n-d-s-h-i-p_-r-e-q-u-e-s-t_-b-y_-i-d.html","searchKeys":["SELECT_FRIENDSHIP_REQUEST_BY_ID","const val SELECT_FRIENDSHIP_REQUEST_BY_ID: String","social.friendship.infrastructure.persistence.sql.SQLOperation.Query.SELECT_FRIENDSHIP_REQUEST_BY_ID"]},{"name":"const val SELECT_MESSAGES_EXCHANGED_BETWEEN_USERS: String","description":"social.friendship.infrastructure.persistence.sql.SQLOperation.Query.SELECT_MESSAGES_EXCHANGED_BETWEEN_USERS","location":"friendship-service/social.friendship.infrastructure.persistence.sql/-s-q-l-operation/-query/-s-e-l-e-c-t_-m-e-s-s-a-g-e-s_-e-x-c-h-a-n-g-e-d_-b-e-t-w-e-e-n_-u-s-e-r-s.html","searchKeys":["SELECT_MESSAGES_EXCHANGED_BETWEEN_USERS","const val SELECT_MESSAGES_EXCHANGED_BETWEEN_USERS: String","social.friendship.infrastructure.persistence.sql.SQLOperation.Query.SELECT_MESSAGES_EXCHANGED_BETWEEN_USERS"]},{"name":"const val SELECT_MESSAGES_RECEIVED_BY_USER: String","description":"social.friendship.infrastructure.persistence.sql.SQLOperation.Query.SELECT_MESSAGES_RECEIVED_BY_USER","location":"friendship-service/social.friendship.infrastructure.persistence.sql/-s-q-l-operation/-query/-s-e-l-e-c-t_-m-e-s-s-a-g-e-s_-r-e-c-e-i-v-e-d_-b-y_-u-s-e-r.html","searchKeys":["SELECT_MESSAGES_RECEIVED_BY_USER","const val SELECT_MESSAGES_RECEIVED_BY_USER: String","social.friendship.infrastructure.persistence.sql.SQLOperation.Query.SELECT_MESSAGES_RECEIVED_BY_USER"]},{"name":"const val SELECT_MESSAGE_BY_ID: String","description":"social.friendship.infrastructure.persistence.sql.SQLOperation.Query.SELECT_MESSAGE_BY_ID","location":"friendship-service/social.friendship.infrastructure.persistence.sql/-s-q-l-operation/-query/-s-e-l-e-c-t_-m-e-s-s-a-g-e_-b-y_-i-d.html","searchKeys":["SELECT_MESSAGE_BY_ID","const val SELECT_MESSAGE_BY_ID: String","social.friendship.infrastructure.persistence.sql.SQLOperation.Query.SELECT_MESSAGE_BY_ID"]},{"name":"const val SELECT_USER_BY_ID: String","description":"social.friendship.infrastructure.persistence.sql.SQLOperation.Query.SELECT_USER_BY_ID","location":"friendship-service/social.friendship.infrastructure.persistence.sql/-s-q-l-operation/-query/-s-e-l-e-c-t_-u-s-e-r_-b-y_-i-d.html","searchKeys":["SELECT_USER_BY_ID","const val SELECT_USER_BY_ID: String","social.friendship.infrastructure.persistence.sql.SQLOperation.Query.SELECT_USER_BY_ID"]},{"name":"const val SENDER: String","description":"social.friendship.infrastructure.persistence.sql.SQLColumns.MessageTable.SENDER","location":"friendship-service/social.friendship.infrastructure.persistence.sql/-s-q-l-columns/-message-table/-s-e-n-d-e-r.html","searchKeys":["SENDER","const val SENDER: String","social.friendship.infrastructure.persistence.sql.SQLColumns.MessageTable.SENDER"]},{"name":"const val TO: String","description":"social.friendship.infrastructure.persistence.sql.SQLColumns.FriendshipRequestTable.TO","location":"friendship-service/social.friendship.infrastructure.persistence.sql/-s-q-l-columns/-friendship-request-table/-t-o.html","searchKeys":["TO","const val TO: String","social.friendship.infrastructure.persistence.sql.SQLColumns.FriendshipRequestTable.TO"]},{"name":"const val UPDATE_FRIENDSHIP: String","description":"social.friendship.infrastructure.persistence.sql.SQLOperation.Update.UPDATE_FRIENDSHIP","location":"friendship-service/social.friendship.infrastructure.persistence.sql/-s-q-l-operation/-update/-u-p-d-a-t-e_-f-r-i-e-n-d-s-h-i-p.html","searchKeys":["UPDATE_FRIENDSHIP","const val UPDATE_FRIENDSHIP: String","social.friendship.infrastructure.persistence.sql.SQLOperation.Update.UPDATE_FRIENDSHIP"]},{"name":"const val UPDATE_FRIENDSHIP_REQUEST: String","description":"social.friendship.infrastructure.persistence.sql.SQLOperation.Update.UPDATE_FRIENDSHIP_REQUEST","location":"friendship-service/social.friendship.infrastructure.persistence.sql/-s-q-l-operation/-update/-u-p-d-a-t-e_-f-r-i-e-n-d-s-h-i-p_-r-e-q-u-e-s-t.html","searchKeys":["UPDATE_FRIENDSHIP_REQUEST","const val UPDATE_FRIENDSHIP_REQUEST: String","social.friendship.infrastructure.persistence.sql.SQLOperation.Update.UPDATE_FRIENDSHIP_REQUEST"]},{"name":"const val UPDATE_MESSAGE: String","description":"social.friendship.infrastructure.persistence.sql.SQLOperation.Update.UPDATE_MESSAGE","location":"friendship-service/social.friendship.infrastructure.persistence.sql/-s-q-l-operation/-update/-u-p-d-a-t-e_-m-e-s-s-a-g-e.html","searchKeys":["UPDATE_MESSAGE","const val UPDATE_MESSAGE: String","social.friendship.infrastructure.persistence.sql.SQLOperation.Update.UPDATE_MESSAGE"]},{"name":"const val UPDATE_USER: String","description":"social.friendship.infrastructure.persistence.sql.SQLOperation.Update.UPDATE_USER","location":"friendship-service/social.friendship.infrastructure.persistence.sql/-s-q-l-operation/-update/-u-p-d-a-t-e_-u-s-e-r.html","searchKeys":["UPDATE_USER","const val UPDATE_USER: String","social.friendship.infrastructure.persistence.sql.SQLOperation.Update.UPDATE_USER"]},{"name":"const val USER_1: String","description":"social.friendship.infrastructure.persistence.sql.SQLColumns.FriendshipTable.USER_1","location":"friendship-service/social.friendship.infrastructure.persistence.sql/-s-q-l-columns/-friendship-table/-u-s-e-r_1.html","searchKeys":["USER_1","const val USER_1: String","social.friendship.infrastructure.persistence.sql.SQLColumns.FriendshipTable.USER_1"]},{"name":"const val USER_2: String","description":"social.friendship.infrastructure.persistence.sql.SQLColumns.FriendshipTable.USER_2","location":"friendship-service/social.friendship.infrastructure.persistence.sql/-s-q-l-columns/-friendship-table/-u-s-e-r_2.html","searchKeys":["USER_2","const val USER_2: String","social.friendship.infrastructure.persistence.sql.SQLColumns.FriendshipTable.USER_2"]},{"name":"constructor()","description":"social.friendship.infrastructure.controller.event.KafkaFriendshipProducerVerticle.KafkaFriendshipProducerVerticle","location":"friendship-service/social.friendship.infrastructure.controller.event/-kafka-friendship-producer-verticle/-kafka-friendship-producer-verticle.html","searchKeys":["KafkaFriendshipProducerVerticle","constructor()","social.friendship.infrastructure.controller.event.KafkaFriendshipProducerVerticle.KafkaFriendshipProducerVerticle"]},{"name":"constructor()","description":"social.friendship.infrastructure.persistence.sql.AbstractSQLRepository.AbstractSQLRepository","location":"friendship-service/social.friendship.infrastructure.persistence.sql/-abstract-s-q-l-repository/-abstract-s-q-l-repository.html","searchKeys":["AbstractSQLRepository","constructor()","social.friendship.infrastructure.persistence.sql.AbstractSQLRepository.AbstractSQLRepository"]},{"name":"constructor()","description":"social.friendship.infrastructure.persistence.sql.FriendshipRequestSQLRepository.FriendshipRequestSQLRepository","location":"friendship-service/social.friendship.infrastructure.persistence.sql/-friendship-request-s-q-l-repository/-friendship-request-s-q-l-repository.html","searchKeys":["FriendshipRequestSQLRepository","constructor()","social.friendship.infrastructure.persistence.sql.FriendshipRequestSQLRepository.FriendshipRequestSQLRepository"]},{"name":"constructor()","description":"social.friendship.infrastructure.persistence.sql.FriendshipSQLRepository.FriendshipSQLRepository","location":"friendship-service/social.friendship.infrastructure.persistence.sql/-friendship-s-q-l-repository/-friendship-s-q-l-repository.html","searchKeys":["FriendshipSQLRepository","constructor()","social.friendship.infrastructure.persistence.sql.FriendshipSQLRepository.FriendshipSQLRepository"]},{"name":"constructor()","description":"social.friendship.infrastructure.persistence.sql.MessageSQLRepository.MessageSQLRepository","location":"friendship-service/social.friendship.infrastructure.persistence.sql/-message-s-q-l-repository/-message-s-q-l-repository.html","searchKeys":["MessageSQLRepository","constructor()","social.friendship.infrastructure.persistence.sql.MessageSQLRepository.MessageSQLRepository"]},{"name":"constructor()","description":"social.friendship.infrastructure.persistence.sql.UserSQLRepository.UserSQLRepository","location":"friendship-service/social.friendship.infrastructure.persistence.sql/-user-s-q-l-repository/-user-s-q-l-repository.html","searchKeys":["UserSQLRepository","constructor()","social.friendship.infrastructure.persistence.sql.UserSQLRepository.UserSQLRepository"]},{"name":"constructor(host: String, port: String, dbName: String, username: String, password: String)","description":"social.friendship.infrastructure.persistence.sql.DatabaseCredentialsImpl.DatabaseCredentialsImpl","location":"friendship-service/social.friendship.infrastructure.persistence.sql/-database-credentials-impl/-database-credentials-impl.html","searchKeys":["DatabaseCredentialsImpl","constructor(host: String, port: String, dbName: String, username: String, password: String)","social.friendship.infrastructure.persistence.sql.DatabaseCredentialsImpl.DatabaseCredentialsImpl"]},{"name":"constructor(service: FriendshipService)","description":"social.friendship.infrastructure.controller.event.KafkaFriendshipConsumerVerticle.KafkaFriendshipConsumerVerticle","location":"friendship-service/social.friendship.infrastructure.controller.event/-kafka-friendship-consumer-verticle/-kafka-friendship-consumer-verticle.html","searchKeys":["KafkaFriendshipConsumerVerticle","constructor(service: FriendshipService)","social.friendship.infrastructure.controller.event.KafkaFriendshipConsumerVerticle.KafkaFriendshipConsumerVerticle"]},{"name":"constructor(service: FriendshipService)","description":"social.friendship.infrastructure.controller.rest.RESTFriendshipAPIVerticleImpl.RESTFriendshipAPIVerticleImpl","location":"friendship-service/social.friendship.infrastructure.controller.rest/-r-e-s-t-friendship-a-p-i-verticle-impl/-r-e-s-t-friendship-a-p-i-verticle-impl.html","searchKeys":["RESTFriendshipAPIVerticleImpl","constructor(service: FriendshipService)","social.friendship.infrastructure.controller.rest.RESTFriendshipAPIVerticleImpl.RESTFriendshipAPIVerticleImpl"]},{"name":"constructor(to: User.UserID, from: User.UserID)","description":"social.friendship.domain.FriendshipRequest.FriendshipRequestID.FriendshipRequestID","location":"friendship-service/social.friendship.domain/-friendship-request/-friendship-request-i-d/-friendship-request-i-d.html","searchKeys":["FriendshipRequestID","constructor(to: User.UserID, from: User.UserID)","social.friendship.domain.FriendshipRequest.FriendshipRequestID.FriendshipRequestID"]},{"name":"constructor(user1: User.UserID, user2: User.UserID)","description":"social.friendship.domain.Friendship.FriendshipID.FriendshipID","location":"friendship-service/social.friendship.domain/-friendship/-friendship-i-d/-friendship-i-d.html","searchKeys":["FriendshipID","constructor(user1: User.UserID, user2: User.UserID)","social.friendship.domain.Friendship.FriendshipID.FriendshipID"]},{"name":"constructor(userRepository: UserRepository, friendshipRepository: FriendshipRepository, friendshipRequestRepository: FriendshipRequestRepository, messageRepository: MessageRepository, kafkaProducer: KafkaProducerVerticle, credentials: DatabaseCredentials? = null, shouldConnectToDB: Boolean? = true)","description":"social.friendship.application.FriendshipServiceVerticle.FriendshipServiceVerticle","location":"friendship-service/social.friendship.application/-friendship-service-verticle/-friendship-service-verticle.html","searchKeys":["FriendshipServiceVerticle","constructor(userRepository: UserRepository, friendshipRepository: FriendshipRepository, friendshipRequestRepository: FriendshipRequestRepository, messageRepository: MessageRepository, kafkaProducer: KafkaProducerVerticle, credentials: DatabaseCredentials? = null, shouldConnectToDB: Boolean? = true)","social.friendship.application.FriendshipServiceVerticle.FriendshipServiceVerticle"]},{"name":"constructor(value: String)","description":"social.friendship.domain.User.UserID.UserID","location":"friendship-service/social.friendship.domain/-user/-user-i-d/-user-i-d.html","searchKeys":["UserID","constructor(value: String)","social.friendship.domain.User.UserID.UserID"]},{"name":"constructor(value: UUID)","description":"social.friendship.domain.Message.MessageID.MessageID","location":"friendship-service/social.friendship.domain/-message/-message-i-d/-message-i-d.html","searchKeys":["MessageID","constructor(value: UUID)","social.friendship.domain.Message.MessageID.MessageID"]},{"name":"data class DatabaseCredentialsImpl(val host: String, val port: String, val dbName: String, val username: String, val password: String) : DatabaseCredentials","description":"social.friendship.infrastructure.persistence.sql.DatabaseCredentialsImpl","location":"friendship-service/social.friendship.infrastructure.persistence.sql/-database-credentials-impl/index.html","searchKeys":["DatabaseCredentialsImpl","data class DatabaseCredentialsImpl(val host: String, val port: String, val dbName: String, val username: String, val password: String) : DatabaseCredentials","social.friendship.infrastructure.persistence.sql.DatabaseCredentialsImpl"]},{"name":"data class FriendshipID constructor(val user1: User.UserID, val user2: User.UserID) : ID<Pair<User.UserID, User.UserID>> ","description":"social.friendship.domain.Friendship.FriendshipID","location":"friendship-service/social.friendship.domain/-friendship/-friendship-i-d/index.html","searchKeys":["FriendshipID","data class FriendshipID constructor(val user1: User.UserID, val user2: User.UserID) : ID<Pair<User.UserID, User.UserID>> ","social.friendship.domain.Friendship.FriendshipID"]},{"name":"data class FriendshipRequestID constructor(val to: User.UserID, val from: User.UserID) : ID<Pair<User.UserID, User.UserID>> ","description":"social.friendship.domain.FriendshipRequest.FriendshipRequestID","location":"friendship-service/social.friendship.domain/-friendship-request/-friendship-request-i-d/index.html","searchKeys":["FriendshipRequestID","data class FriendshipRequestID constructor(val to: User.UserID, val from: User.UserID) : ID<Pair<User.UserID, User.UserID>> ","social.friendship.domain.FriendshipRequest.FriendshipRequestID"]},{"name":"data class MessageID constructor(val value: UUID) : ID<UUID> ","description":"social.friendship.domain.Message.MessageID","location":"friendship-service/social.friendship.domain/-message/-message-i-d/index.html","searchKeys":["MessageID","data class MessageID constructor(val value: UUID) : ID<UUID> ","social.friendship.domain.Message.MessageID"]},{"name":"data class UserID constructor(val value: String) : ID<String> ","description":"social.friendship.domain.User.UserID","location":"friendship-service/social.friendship.domain/-user/-user-i-d/index.html","searchKeys":["UserID","data class UserID constructor(val value: String) : ID<String> ","social.friendship.domain.User.UserID"]},{"name":"fun close()","description":"social.friendship.infrastructure.persistence.sql.AbstractSQLRepository.close","location":"friendship-service/social.friendship.infrastructure.persistence.sql/-abstract-s-q-l-repository/close.html","searchKeys":["close","fun close()","social.friendship.infrastructure.persistence.sql.AbstractSQLRepository.close"]},{"name":"fun connect(host: String, port: String, database: String, username: String, password: String)","description":"social.friendship.infrastructure.persistence.sql.AbstractSQLRepository.connect","location":"friendship-service/social.friendship.infrastructure.persistence.sql/-abstract-s-q-l-repository/connect.html","searchKeys":["connect","fun connect(host: String, port: String, database: String, username: String, password: String)","social.friendship.infrastructure.persistence.sql.AbstractSQLRepository.connect"]},{"name":"fun connectToDatabase()","description":"social.friendship.application.FriendshipServiceVerticle.connectToDatabase","location":"friendship-service/social.friendship.application/-friendship-service-verticle/connect-to-database.html","searchKeys":["connectToDatabase","fun connectToDatabase()","social.friendship.application.FriendshipServiceVerticle.connectToDatabase"]},{"name":"fun main(args: Array<String>)","description":"social.friendship.main","location":"friendship-service/social.friendship/main.html","searchKeys":["main","fun main(args: Array<String>)","social.friendship.main"]},{"name":"fun mySQLConnection(host: String, port: String, database: String, username: String, password: String): Connection","description":"social.friendship.infrastructure.persistence.sql.SQLUtils.mySQLConnection","location":"friendship-service/social.friendship.infrastructure.persistence.sql/-s-q-l-utils/my-s-q-l-connection.html","searchKeys":["mySQLConnection","fun mySQLConnection(host: String, port: String, database: String, username: String, password: String): Connection","social.friendship.infrastructure.persistence.sql.SQLUtils.mySQLConnection"]},{"name":"fun of(messageId: UUID, sender: User, receiver: User, content: String): Message","description":"social.friendship.domain.Message.Companion.of","location":"friendship-service/social.friendship.domain/-message/-companion/of.html","searchKeys":["of","fun of(messageId: UUID, sender: User, receiver: User, content: String): Message","social.friendship.domain.Message.Companion.of"]},{"name":"fun of(request: FriendshipRequest): Friendship","description":"social.friendship.domain.Friendship.Companion.of","location":"friendship-service/social.friendship.domain/-friendship/-companion/of.html","searchKeys":["of","fun of(request: FriendshipRequest): Friendship","social.friendship.domain.Friendship.Companion.of"]},{"name":"fun of(sender: User, receiver: User, content: String): Message","description":"social.friendship.domain.Message.Companion.of","location":"friendship-service/social.friendship.domain/-message/-companion/of.html","searchKeys":["of","fun of(sender: User, receiver: User, content: String): Message","social.friendship.domain.Message.Companion.of"]},{"name":"fun of(to: User, from: User): FriendshipRequest","description":"social.friendship.domain.FriendshipRequest.Companion.of","location":"friendship-service/social.friendship.domain/-friendship-request/-companion/of.html","searchKeys":["of","fun of(to: User, from: User): FriendshipRequest","social.friendship.domain.FriendshipRequest.Companion.of"]},{"name":"fun of(user1: User, user2: User): Friendship","description":"social.friendship.domain.Friendship.Companion.of","location":"friendship-service/social.friendship.domain/-friendship/-companion/of.html","searchKeys":["of","fun of(user1: User, user2: User): Friendship","social.friendship.domain.Friendship.Companion.of"]},{"name":"fun of(userID: String): User","description":"social.friendship.domain.User.Companion.of","location":"friendship-service/social.friendship.domain/-user/-companion/of.html","searchKeys":["of","fun of(userID: String): User","social.friendship.domain.User.Companion.of"]},{"name":"fun of(userID: User.UserID): User","description":"social.friendship.domain.User.Companion.of","location":"friendship-service/social.friendship.domain/-user/-companion/of.html","searchKeys":["of","fun of(userID: User.UserID): User","social.friendship.domain.User.Companion.of"]},{"name":"fun prepareStatement(connection: Connection, sqlStatement: String, vararg params: Any): PreparedStatement","description":"social.friendship.infrastructure.persistence.sql.SQLUtils.prepareStatement","location":"friendship-service/social.friendship.infrastructure.persistence.sql/-s-q-l-utils/prepare-statement.html","searchKeys":["prepareStatement","fun prepareStatement(connection: Connection, sqlStatement: String, vararg params: Any): PreparedStatement","social.friendship.infrastructure.persistence.sql.SQLUtils.prepareStatement"]},{"name":"interface ConnectableRepository","description":"social.friendship.application.ConnectableRepository","location":"friendship-service/social.friendship.application/-connectable-repository/index.html","searchKeys":["ConnectableRepository","interface ConnectableRepository","social.friendship.application.ConnectableRepository"]},{"name":"interface DatabaseCredentials","description":"social.friendship.social.friendship.application.DatabaseCredentials","location":"friendship-service/social.friendship.social.friendship.application/-database-credentials/index.html","searchKeys":["DatabaseCredentials","interface DatabaseCredentials","social.friendship.social.friendship.application.DatabaseCredentials"]},{"name":"interface FriendshipProcessor : Processor","description":"social.friendship.application.FriendshipProcessor","location":"friendship-service/social.friendship.application/-friendship-processor/index.html","searchKeys":["FriendshipProcessor","interface FriendshipProcessor : Processor","social.friendship.application.FriendshipProcessor"]},{"name":"interface FriendshipRepository : Repository<Friendship.FriendshipID, Friendship> , ConnectableRepository","description":"social.friendship.application.FriendshipRepository","location":"friendship-service/social.friendship.application/-friendship-repository/index.html","searchKeys":["FriendshipRepository","interface FriendshipRepository : Repository<Friendship.FriendshipID, Friendship> , ConnectableRepository","social.friendship.application.FriendshipRepository"]},{"name":"interface FriendshipRequestProcessor : Processor","description":"social.friendship.application.FriendshipRequestProcessor","location":"friendship-service/social.friendship.application/-friendship-request-processor/index.html","searchKeys":["FriendshipRequestProcessor","interface FriendshipRequestProcessor : Processor","social.friendship.application.FriendshipRequestProcessor"]},{"name":"interface FriendshipRequestRepository : Repository<FriendshipRequest.FriendshipRequestID, FriendshipRequest> , ConnectableRepository","description":"social.friendship.application.FriendshipRequestRepository","location":"friendship-service/social.friendship.application/-friendship-request-repository/index.html","searchKeys":["FriendshipRequestRepository","interface FriendshipRequestRepository : Repository<FriendshipRequest.FriendshipRequestID, FriendshipRequest> , ConnectableRepository","social.friendship.application.FriendshipRequestRepository"]},{"name":"interface FriendshipService : FriendshipProcessor, FriendshipRequestProcessor, MessageProcessor, UserProcessor, Service","description":"social.friendship.application.FriendshipService","location":"friendship-service/social.friendship.application/-friendship-service/index.html","searchKeys":["FriendshipService","interface FriendshipService : FriendshipProcessor, FriendshipRequestProcessor, MessageProcessor, UserProcessor, Service","social.friendship.application.FriendshipService"]},{"name":"interface KafkaConsumerVerticle : Verticle","description":"social.friendship.infrastructure.controller.event.KafkaConsumerVerticle","location":"friendship-service/social.friendship.infrastructure.controller.event/-kafka-consumer-verticle/index.html","searchKeys":["KafkaConsumerVerticle","interface KafkaConsumerVerticle : Verticle","social.friendship.infrastructure.controller.event.KafkaConsumerVerticle"]},{"name":"interface KafkaProducerVerticle : Verticle","description":"social.friendship.application.KafkaProducerVerticle","location":"friendship-service/social.friendship.application/-kafka-producer-verticle/index.html","searchKeys":["KafkaProducerVerticle","interface KafkaProducerVerticle : Verticle","social.friendship.application.KafkaProducerVerticle"]},{"name":"interface MessageProcessor : Processor","description":"social.friendship.application.MessageProcessor","location":"friendship-service/social.friendship.application/-message-processor/index.html","searchKeys":["MessageProcessor","interface MessageProcessor : Processor","social.friendship.application.MessageProcessor"]},{"name":"interface MessageRepository : Repository<Message.MessageID, Message> , ConnectableRepository","description":"social.friendship.application.MessageRepository","location":"friendship-service/social.friendship.application/-message-repository/index.html","searchKeys":["MessageRepository","interface MessageRepository : Repository<Message.MessageID, Message> , ConnectableRepository","social.friendship.application.MessageRepository"]},{"name":"interface Processor","description":"social.friendship.application.Processor","location":"friendship-service/social.friendship.application/-processor/index.html","searchKeys":["Processor","interface Processor","social.friendship.application.Processor"]},{"name":"interface RESTFriendshipAPIVerticle : Verticle","description":"social.friendship.infrastructure.controller.rest.RESTFriendshipAPIVerticle","location":"friendship-service/social.friendship.infrastructure.controller.rest/-r-e-s-t-friendship-a-p-i-verticle/index.html","searchKeys":["RESTFriendshipAPIVerticle","interface RESTFriendshipAPIVerticle : Verticle","social.friendship.infrastructure.controller.rest.RESTFriendshipAPIVerticle"]},{"name":"interface UserProcessor : Processor","description":"social.friendship.application.UserProcessor","location":"friendship-service/social.friendship.application/-user-processor/index.html","searchKeys":["UserProcessor","interface UserProcessor : Processor","social.friendship.application.UserProcessor"]},{"name":"interface UserRepository : Repository<User.UserID, User> , ConnectableRepository","description":"social.friendship.application.UserRepository","location":"friendship-service/social.friendship.application/-user-repository/index.html","searchKeys":["UserRepository","interface UserRepository : Repository<User.UserID, User> , ConnectableRepository","social.friendship.application.UserRepository"]},{"name":"object Companion","description":"social.friendship.infrastructure.controller.rest.RESTFriendshipAPIVerticleImpl.Companion","location":"friendship-service/social.friendship.infrastructure.controller.rest/-r-e-s-t-friendship-a-p-i-verticle-impl/-companion/index.html","searchKeys":["Companion","object Companion","social.friendship.infrastructure.controller.rest.RESTFriendshipAPIVerticleImpl.Companion"]},{"name":"object Companion : Factory<Friendship> ","description":"social.friendship.domain.Friendship.Companion","location":"friendship-service/social.friendship.domain/-friendship/-companion/index.html","searchKeys":["Companion","object Companion : Factory<Friendship> ","social.friendship.domain.Friendship.Companion"]},{"name":"object Companion : Factory<FriendshipRequest> ","description":"social.friendship.domain.FriendshipRequest.Companion","location":"friendship-service/social.friendship.domain/-friendship-request/-companion/index.html","searchKeys":["Companion","object Companion : Factory<FriendshipRequest> ","social.friendship.domain.FriendshipRequest.Companion"]},{"name":"object Companion : Factory<Message> ","description":"social.friendship.domain.Message.Companion","location":"friendship-service/social.friendship.domain/-message/-companion/index.html","searchKeys":["Companion","object Companion : Factory<Message> ","social.friendship.domain.Message.Companion"]},{"name":"object Companion : Factory<User> ","description":"social.friendship.domain.User.Companion","location":"friendship-service/social.friendship.domain/-user/-companion/index.html","searchKeys":["Companion","object Companion : Factory<User> ","social.friendship.domain.User.Companion"]},{"name":"object FriendshipRequestTable","description":"social.friendship.infrastructure.persistence.sql.SQLColumns.FriendshipRequestTable","location":"friendship-service/social.friendship.infrastructure.persistence.sql/-s-q-l-columns/-friendship-request-table/index.html","searchKeys":["FriendshipRequestTable","object FriendshipRequestTable","social.friendship.infrastructure.persistence.sql.SQLColumns.FriendshipRequestTable"]},{"name":"object FriendshipTable","description":"social.friendship.infrastructure.persistence.sql.SQLColumns.FriendshipTable","location":"friendship-service/social.friendship.infrastructure.persistence.sql/-s-q-l-columns/-friendship-table/index.html","searchKeys":["FriendshipTable","object FriendshipTable","social.friendship.infrastructure.persistence.sql.SQLColumns.FriendshipTable"]},{"name":"object MessageTable","description":"social.friendship.infrastructure.persistence.sql.SQLColumns.MessageTable","location":"friendship-service/social.friendship.infrastructure.persistence.sql/-s-q-l-columns/-message-table/index.html","searchKeys":["MessageTable","object MessageTable","social.friendship.infrastructure.persistence.sql.SQLColumns.MessageTable"]},{"name":"object Query","description":"social.friendship.infrastructure.persistence.sql.SQLOperation.Query","location":"friendship-service/social.friendship.infrastructure.persistence.sql/-s-q-l-operation/-query/index.html","searchKeys":["Query","object Query","social.friendship.infrastructure.persistence.sql.SQLOperation.Query"]},{"name":"object SQLColumns","description":"social.friendship.infrastructure.persistence.sql.SQLColumns","location":"friendship-service/social.friendship.infrastructure.persistence.sql/-s-q-l-columns/index.html","searchKeys":["SQLColumns","object SQLColumns","social.friendship.infrastructure.persistence.sql.SQLColumns"]},{"name":"object SQLOperation","description":"social.friendship.infrastructure.persistence.sql.SQLOperation","location":"friendship-service/social.friendship.infrastructure.persistence.sql/-s-q-l-operation/index.html","searchKeys":["SQLOperation","object SQLOperation","social.friendship.infrastructure.persistence.sql.SQLOperation"]},{"name":"object SQLStateError","description":"social.friendship.infrastructure.persistence.sql.SQLStateError","location":"friendship-service/social.friendship.infrastructure.persistence.sql/-s-q-l-state-error/index.html","searchKeys":["SQLStateError","object SQLStateError","social.friendship.infrastructure.persistence.sql.SQLStateError"]},{"name":"object SQLUtils","description":"social.friendship.infrastructure.persistence.sql.SQLUtils","location":"friendship-service/social.friendship.infrastructure.persistence.sql/-s-q-l-utils/index.html","searchKeys":["SQLUtils","object SQLUtils","social.friendship.infrastructure.persistence.sql.SQLUtils"]},{"name":"object Update","description":"social.friendship.infrastructure.persistence.sql.SQLOperation.Update","location":"friendship-service/social.friendship.infrastructure.persistence.sql/-s-q-l-operation/-update/index.html","searchKeys":["Update","object Update","social.friendship.infrastructure.persistence.sql.SQLOperation.Update"]},{"name":"object UserTable","description":"social.friendship.infrastructure.persistence.sql.SQLColumns.UserTable","location":"friendship-service/social.friendship.infrastructure.persistence.sql/-s-q-l-columns/-user-table/index.html","searchKeys":["UserTable","object UserTable","social.friendship.infrastructure.persistence.sql.SQLColumns.UserTable"]},{"name":"open override fun acceptFriendshipRequest(request: FriendshipRequest)","description":"social.friendship.application.FriendshipServiceVerticle.acceptFriendshipRequest","location":"friendship-service/social.friendship.application/-friendship-service-verticle/accept-friendship-request.html","searchKeys":["acceptFriendshipRequest","open override fun acceptFriendshipRequest(request: FriendshipRequest)","social.friendship.application.FriendshipServiceVerticle.acceptFriendshipRequest"]},{"name":"open override fun addFriendship(friendship: Friendship)","description":"social.friendship.application.FriendshipServiceVerticle.addFriendship","location":"friendship-service/social.friendship.application/-friendship-service-verticle/add-friendship.html","searchKeys":["addFriendship","open override fun addFriendship(friendship: Friendship)","social.friendship.application.FriendshipServiceVerticle.addFriendship"]},{"name":"open override fun addFriendshipRequest(friendshipRequest: FriendshipRequest)","description":"social.friendship.application.FriendshipServiceVerticle.addFriendshipRequest","location":"friendship-service/social.friendship.application/-friendship-service-verticle/add-friendship-request.html","searchKeys":["addFriendshipRequest","open override fun addFriendshipRequest(friendshipRequest: FriendshipRequest)","social.friendship.application.FriendshipServiceVerticle.addFriendshipRequest"]},{"name":"open override fun addMessage(message: Message)","description":"social.friendship.application.FriendshipServiceVerticle.addMessage","location":"friendship-service/social.friendship.application/-friendship-service-verticle/add-message.html","searchKeys":["addMessage","open override fun addMessage(message: Message)","social.friendship.application.FriendshipServiceVerticle.addMessage"]},{"name":"open override fun addUser(user: User)","description":"social.friendship.application.FriendshipServiceVerticle.addUser","location":"friendship-service/social.friendship.application/-friendship-service-verticle/add-user.html","searchKeys":["addUser","open override fun addUser(user: User)","social.friendship.application.FriendshipServiceVerticle.addUser"]},{"name":"open override fun deleteById(id: Friendship.FriendshipID): Friendship?","description":"social.friendship.infrastructure.persistence.sql.FriendshipSQLRepository.deleteById","location":"friendship-service/social.friendship.infrastructure.persistence.sql/-friendship-s-q-l-repository/delete-by-id.html","searchKeys":["deleteById","open override fun deleteById(id: Friendship.FriendshipID): Friendship?","social.friendship.infrastructure.persistence.sql.FriendshipSQLRepository.deleteById"]},{"name":"open override fun deleteById(id: FriendshipRequest.FriendshipRequestID): FriendshipRequest?","description":"social.friendship.infrastructure.persistence.sql.FriendshipRequestSQLRepository.deleteById","location":"friendship-service/social.friendship.infrastructure.persistence.sql/-friendship-request-s-q-l-repository/delete-by-id.html","searchKeys":["deleteById","open override fun deleteById(id: FriendshipRequest.FriendshipRequestID): FriendshipRequest?","social.friendship.infrastructure.persistence.sql.FriendshipRequestSQLRepository.deleteById"]},{"name":"open override fun deleteById(id: Message.MessageID): Message?","description":"social.friendship.infrastructure.persistence.sql.MessageSQLRepository.deleteById","location":"friendship-service/social.friendship.infrastructure.persistence.sql/-message-s-q-l-repository/delete-by-id.html","searchKeys":["deleteById","open override fun deleteById(id: Message.MessageID): Message?","social.friendship.infrastructure.persistence.sql.MessageSQLRepository.deleteById"]},{"name":"open override fun deleteById(id: User.UserID): User?","description":"social.friendship.infrastructure.persistence.sql.UserSQLRepository.deleteById","location":"friendship-service/social.friendship.infrastructure.persistence.sql/-user-s-q-l-repository/delete-by-id.html","searchKeys":["deleteById","open override fun deleteById(id: User.UserID): User?","social.friendship.infrastructure.persistence.sql.UserSQLRepository.deleteById"]},{"name":"open override fun deleteFriendship(friendshipID: Friendship.FriendshipID): Friendship?","description":"social.friendship.application.FriendshipServiceVerticle.deleteFriendship","location":"friendship-service/social.friendship.application/-friendship-service-verticle/delete-friendship.html","searchKeys":["deleteFriendship","open override fun deleteFriendship(friendshipID: Friendship.FriendshipID): Friendship?","social.friendship.application.FriendshipServiceVerticle.deleteFriendship"]},{"name":"open override fun deleteMessage(messageID: Message.MessageID): Message?","description":"social.friendship.application.FriendshipServiceVerticle.deleteMessage","location":"friendship-service/social.friendship.application/-friendship-service-verticle/delete-message.html","searchKeys":["deleteMessage","open override fun deleteMessage(messageID: Message.MessageID): Message?","social.friendship.application.FriendshipServiceVerticle.deleteMessage"]},{"name":"open override fun findAll(): Array<Friendship>","description":"social.friendship.infrastructure.persistence.sql.FriendshipSQLRepository.findAll","location":"friendship-service/social.friendship.infrastructure.persistence.sql/-friendship-s-q-l-repository/find-all.html","searchKeys":["findAll","open override fun findAll(): Array<Friendship>","social.friendship.infrastructure.persistence.sql.FriendshipSQLRepository.findAll"]},{"name":"open override fun findAll(): Array<FriendshipRequest>","description":"social.friendship.infrastructure.persistence.sql.FriendshipRequestSQLRepository.findAll","location":"friendship-service/social.friendship.infrastructure.persistence.sql/-friendship-request-s-q-l-repository/find-all.html","searchKeys":["findAll","open override fun findAll(): Array<FriendshipRequest>","social.friendship.infrastructure.persistence.sql.FriendshipRequestSQLRepository.findAll"]},{"name":"open override fun findAll(): Array<Message>","description":"social.friendship.infrastructure.persistence.sql.MessageSQLRepository.findAll","location":"friendship-service/social.friendship.infrastructure.persistence.sql/-message-s-q-l-repository/find-all.html","searchKeys":["findAll","open override fun findAll(): Array<Message>","social.friendship.infrastructure.persistence.sql.MessageSQLRepository.findAll"]},{"name":"open override fun findAll(): Array<User>","description":"social.friendship.infrastructure.persistence.sql.UserSQLRepository.findAll","location":"friendship-service/social.friendship.infrastructure.persistence.sql/-user-s-q-l-repository/find-all.html","searchKeys":["findAll","open override fun findAll(): Array<User>","social.friendship.infrastructure.persistence.sql.UserSQLRepository.findAll"]},{"name":"open override fun findAllFriendsOf(userID: User.UserID): Iterable<User>","description":"social.friendship.infrastructure.persistence.sql.FriendshipSQLRepository.findAllFriendsOf","location":"friendship-service/social.friendship.infrastructure.persistence.sql/-friendship-s-q-l-repository/find-all-friends-of.html","searchKeys":["findAllFriendsOf","open override fun findAllFriendsOf(userID: User.UserID): Iterable<User>","social.friendship.infrastructure.persistence.sql.FriendshipSQLRepository.findAllFriendsOf"]},{"name":"open override fun findAllMessagesExchangedBetween(user1: User.UserID, user2: User.UserID): Iterable<Message>","description":"social.friendship.infrastructure.persistence.sql.MessageSQLRepository.findAllMessagesExchangedBetween","location":"friendship-service/social.friendship.infrastructure.persistence.sql/-message-s-q-l-repository/find-all-messages-exchanged-between.html","searchKeys":["findAllMessagesExchangedBetween","open override fun findAllMessagesExchangedBetween(user1: User.UserID, user2: User.UserID): Iterable<Message>","social.friendship.infrastructure.persistence.sql.MessageSQLRepository.findAllMessagesExchangedBetween"]},{"name":"open override fun findAllMessagesReceivedBy(userID: User.UserID): Iterable<Message>","description":"social.friendship.infrastructure.persistence.sql.MessageSQLRepository.findAllMessagesReceivedBy","location":"friendship-service/social.friendship.infrastructure.persistence.sql/-message-s-q-l-repository/find-all-messages-received-by.html","searchKeys":["findAllMessagesReceivedBy","open override fun findAllMessagesReceivedBy(userID: User.UserID): Iterable<Message>","social.friendship.infrastructure.persistence.sql.MessageSQLRepository.findAllMessagesReceivedBy"]},{"name":"open override fun findById(id: Friendship.FriendshipID): Friendship?","description":"social.friendship.infrastructure.persistence.sql.FriendshipSQLRepository.findById","location":"friendship-service/social.friendship.infrastructure.persistence.sql/-friendship-s-q-l-repository/find-by-id.html","searchKeys":["findById","open override fun findById(id: Friendship.FriendshipID): Friendship?","social.friendship.infrastructure.persistence.sql.FriendshipSQLRepository.findById"]},{"name":"open override fun findById(id: FriendshipRequest.FriendshipRequestID): FriendshipRequest?","description":"social.friendship.infrastructure.persistence.sql.FriendshipRequestSQLRepository.findById","location":"friendship-service/social.friendship.infrastructure.persistence.sql/-friendship-request-s-q-l-repository/find-by-id.html","searchKeys":["findById","open override fun findById(id: FriendshipRequest.FriendshipRequestID): FriendshipRequest?","social.friendship.infrastructure.persistence.sql.FriendshipRequestSQLRepository.findById"]},{"name":"open override fun findById(id: Message.MessageID): Message?","description":"social.friendship.infrastructure.persistence.sql.MessageSQLRepository.findById","location":"friendship-service/social.friendship.infrastructure.persistence.sql/-message-s-q-l-repository/find-by-id.html","searchKeys":["findById","open override fun findById(id: Message.MessageID): Message?","social.friendship.infrastructure.persistence.sql.MessageSQLRepository.findById"]},{"name":"open override fun findById(id: User.UserID): User?","description":"social.friendship.infrastructure.persistence.sql.UserSQLRepository.findById","location":"friendship-service/social.friendship.infrastructure.persistence.sql/-user-s-q-l-repository/find-by-id.html","searchKeys":["findById","open override fun findById(id: User.UserID): User?","social.friendship.infrastructure.persistence.sql.UserSQLRepository.findById"]},{"name":"open override fun getAllFriendsByUserId(userID: User.UserID): Iterable<User>","description":"social.friendship.application.FriendshipServiceVerticle.getAllFriendsByUserId","location":"friendship-service/social.friendship.application/-friendship-service-verticle/get-all-friends-by-user-id.html","searchKeys":["getAllFriendsByUserId","open override fun getAllFriendsByUserId(userID: User.UserID): Iterable<User>","social.friendship.application.FriendshipServiceVerticle.getAllFriendsByUserId"]},{"name":"open override fun getAllFriendshipRequests(): Array<FriendshipRequest>","description":"social.friendship.application.FriendshipServiceVerticle.getAllFriendshipRequests","location":"friendship-service/social.friendship.application/-friendship-service-verticle/get-all-friendship-requests.html","searchKeys":["getAllFriendshipRequests","open override fun getAllFriendshipRequests(): Array<FriendshipRequest>","social.friendship.application.FriendshipServiceVerticle.getAllFriendshipRequests"]},{"name":"open override fun getAllFriendshipRequestsByUserId(userID: User.UserID): Iterable<FriendshipRequest>","description":"social.friendship.application.FriendshipServiceVerticle.getAllFriendshipRequestsByUserId","location":"friendship-service/social.friendship.application/-friendship-service-verticle/get-all-friendship-requests-by-user-id.html","searchKeys":["getAllFriendshipRequestsByUserId","open override fun getAllFriendshipRequestsByUserId(userID: User.UserID): Iterable<FriendshipRequest>","social.friendship.application.FriendshipServiceVerticle.getAllFriendshipRequestsByUserId"]},{"name":"open override fun getAllFriendshipRequestsOf(userId: User.UserID): Iterable<FriendshipRequest>","description":"social.friendship.infrastructure.persistence.sql.FriendshipRequestSQLRepository.getAllFriendshipRequestsOf","location":"friendship-service/social.friendship.infrastructure.persistence.sql/-friendship-request-s-q-l-repository/get-all-friendship-requests-of.html","searchKeys":["getAllFriendshipRequestsOf","open override fun getAllFriendshipRequestsOf(userId: User.UserID): Iterable<FriendshipRequest>","social.friendship.infrastructure.persistence.sql.FriendshipRequestSQLRepository.getAllFriendshipRequestsOf"]},{"name":"open override fun getAllFriendships(): Array<Friendship>","description":"social.friendship.application.FriendshipServiceVerticle.getAllFriendships","location":"friendship-service/social.friendship.application/-friendship-service-verticle/get-all-friendships.html","searchKeys":["getAllFriendships","open override fun getAllFriendships(): Array<Friendship>","social.friendship.application.FriendshipServiceVerticle.getAllFriendships"]},{"name":"open override fun getAllMessages(): Array<Message>","description":"social.friendship.application.FriendshipServiceVerticle.getAllMessages","location":"friendship-service/social.friendship.application/-friendship-service-verticle/get-all-messages.html","searchKeys":["getAllMessages","open override fun getAllMessages(): Array<Message>","social.friendship.application.FriendshipServiceVerticle.getAllMessages"]},{"name":"open override fun getAllMessagesExchangedBetween(user1Id: User.UserID, user2Id: User.UserID): Iterable<Message>","description":"social.friendship.application.FriendshipServiceVerticle.getAllMessagesExchangedBetween","location":"friendship-service/social.friendship.application/-friendship-service-verticle/get-all-messages-exchanged-between.html","searchKeys":["getAllMessagesExchangedBetween","open override fun getAllMessagesExchangedBetween(user1Id: User.UserID, user2Id: User.UserID): Iterable<Message>","social.friendship.application.FriendshipServiceVerticle.getAllMessagesExchangedBetween"]},{"name":"open override fun getAllMessagesReceivedByUserId(userID: User.UserID): Iterable<Message>","description":"social.friendship.application.FriendshipServiceVerticle.getAllMessagesReceivedByUserId","location":"friendship-service/social.friendship.application/-friendship-service-verticle/get-all-messages-received-by-user-id.html","searchKeys":["getAllMessagesReceivedByUserId","open override fun getAllMessagesReceivedByUserId(userID: User.UserID): Iterable<Message>","social.friendship.application.FriendshipServiceVerticle.getAllMessagesReceivedByUserId"]},{"name":"open override fun getFriendship(friendshipID: Friendship.FriendshipID): Friendship?","description":"social.friendship.application.FriendshipServiceVerticle.getFriendship","location":"friendship-service/social.friendship.application/-friendship-service-verticle/get-friendship.html","searchKeys":["getFriendship","open override fun getFriendship(friendshipID: Friendship.FriendshipID): Friendship?","social.friendship.application.FriendshipServiceVerticle.getFriendship"]},{"name":"open override fun getFriendshipRequest(friendshipRequestID: FriendshipRequest.FriendshipRequestID): FriendshipRequest?","description":"social.friendship.application.FriendshipServiceVerticle.getFriendshipRequest","location":"friendship-service/social.friendship.application/-friendship-service-verticle/get-friendship-request.html","searchKeys":["getFriendshipRequest","open override fun getFriendshipRequest(friendshipRequestID: FriendshipRequest.FriendshipRequestID): FriendshipRequest?","social.friendship.application.FriendshipServiceVerticle.getFriendshipRequest"]},{"name":"open override fun getMessage(messageID: Message.MessageID): Message?","description":"social.friendship.application.FriendshipServiceVerticle.getMessage","location":"friendship-service/social.friendship.application/-friendship-service-verticle/get-message.html","searchKeys":["getMessage","open override fun getMessage(messageID: Message.MessageID): Message?","social.friendship.application.FriendshipServiceVerticle.getMessage"]},{"name":"open override fun getUser(userID: User.UserID): User?","description":"social.friendship.application.FriendshipServiceVerticle.getUser","location":"friendship-service/social.friendship.application/-friendship-service-verticle/get-user.html","searchKeys":["getUser","open override fun getUser(userID: User.UserID): User?","social.friendship.application.FriendshipServiceVerticle.getUser"]},{"name":"open override fun publishEvent(event: DomainEvent)","description":"social.friendship.infrastructure.controller.event.KafkaFriendshipProducerVerticle.publishEvent","location":"friendship-service/social.friendship.infrastructure.controller.event/-kafka-friendship-producer-verticle/publish-event.html","searchKeys":["publishEvent","open override fun publishEvent(event: DomainEvent)","social.friendship.infrastructure.controller.event.KafkaFriendshipProducerVerticle.publishEvent"]},{"name":"open override fun receivedMessage(message: Message)","description":"social.friendship.application.FriendshipServiceVerticle.receivedMessage","location":"friendship-service/social.friendship.application/-friendship-service-verticle/received-message.html","searchKeys":["receivedMessage","open override fun receivedMessage(message: Message)","social.friendship.application.FriendshipServiceVerticle.receivedMessage"]},{"name":"open override fun rejectFriendshipRequest(friendshipRequest: FriendshipRequest): FriendshipRequest?","description":"social.friendship.application.FriendshipServiceVerticle.rejectFriendshipRequest","location":"friendship-service/social.friendship.application/-friendship-service-verticle/reject-friendship-request.html","searchKeys":["rejectFriendshipRequest","open override fun rejectFriendshipRequest(friendshipRequest: FriendshipRequest): FriendshipRequest?","social.friendship.application.FriendshipServiceVerticle.rejectFriendshipRequest"]},{"name":"open override fun save(entity: Friendship)","description":"social.friendship.infrastructure.persistence.sql.FriendshipSQLRepository.save","location":"friendship-service/social.friendship.infrastructure.persistence.sql/-friendship-s-q-l-repository/save.html","searchKeys":["save","open override fun save(entity: Friendship)","social.friendship.infrastructure.persistence.sql.FriendshipSQLRepository.save"]},{"name":"open override fun save(entity: FriendshipRequest)","description":"social.friendship.infrastructure.persistence.sql.FriendshipRequestSQLRepository.save","location":"friendship-service/social.friendship.infrastructure.persistence.sql/-friendship-request-s-q-l-repository/save.html","searchKeys":["save","open override fun save(entity: FriendshipRequest)","social.friendship.infrastructure.persistence.sql.FriendshipRequestSQLRepository.save"]},{"name":"open override fun save(entity: Message)","description":"social.friendship.infrastructure.persistence.sql.MessageSQLRepository.save","location":"friendship-service/social.friendship.infrastructure.persistence.sql/-message-s-q-l-repository/save.html","searchKeys":["save","open override fun save(entity: Message)","social.friendship.infrastructure.persistence.sql.MessageSQLRepository.save"]},{"name":"open override fun save(entity: User)","description":"social.friendship.infrastructure.persistence.sql.UserSQLRepository.save","location":"friendship-service/social.friendship.infrastructure.persistence.sql/-user-s-q-l-repository/save.html","searchKeys":["save","open override fun save(entity: User)","social.friendship.infrastructure.persistence.sql.UserSQLRepository.save"]},{"name":"open override fun sentMessage(message: Message)","description":"social.friendship.application.FriendshipServiceVerticle.sentMessage","location":"friendship-service/social.friendship.application/-friendship-service-verticle/sent-message.html","searchKeys":["sentMessage","open override fun sentMessage(message: Message)","social.friendship.application.FriendshipServiceVerticle.sentMessage"]},{"name":"open override fun start()","description":"social.friendship.application.FriendshipServiceVerticle.start","location":"friendship-service/social.friendship.application/-friendship-service-verticle/start.html","searchKeys":["start","open override fun start()","social.friendship.application.FriendshipServiceVerticle.start"]},{"name":"open override fun start()","description":"social.friendship.infrastructure.controller.event.KafkaFriendshipConsumerVerticle.start","location":"friendship-service/social.friendship.infrastructure.controller.event/-kafka-friendship-consumer-verticle/start.html","searchKeys":["start","open override fun start()","social.friendship.infrastructure.controller.event.KafkaFriendshipConsumerVerticle.start"]},{"name":"open override fun start()","description":"social.friendship.infrastructure.controller.event.KafkaFriendshipProducerVerticle.start","location":"friendship-service/social.friendship.infrastructure.controller.event/-kafka-friendship-producer-verticle/start.html","searchKeys":["start","open override fun start()","social.friendship.infrastructure.controller.event.KafkaFriendshipProducerVerticle.start"]},{"name":"open override fun start()","description":"social.friendship.infrastructure.controller.rest.RESTFriendshipAPIVerticleImpl.start","location":"friendship-service/social.friendship.infrastructure.controller.rest/-r-e-s-t-friendship-a-p-i-verticle-impl/start.html","searchKeys":["start","open override fun start()","social.friendship.infrastructure.controller.rest.RESTFriendshipAPIVerticleImpl.start"]},{"name":"open override fun update(entity: Friendship)","description":"social.friendship.infrastructure.persistence.sql.FriendshipSQLRepository.update","location":"friendship-service/social.friendship.infrastructure.persistence.sql/-friendship-s-q-l-repository/update.html","searchKeys":["update","open override fun update(entity: Friendship)","social.friendship.infrastructure.persistence.sql.FriendshipSQLRepository.update"]},{"name":"open override fun update(entity: FriendshipRequest)","description":"social.friendship.infrastructure.persistence.sql.FriendshipRequestSQLRepository.update","location":"friendship-service/social.friendship.infrastructure.persistence.sql/-friendship-request-s-q-l-repository/update.html","searchKeys":["update","open override fun update(entity: FriendshipRequest)","social.friendship.infrastructure.persistence.sql.FriendshipRequestSQLRepository.update"]},{"name":"open override fun update(entity: Message)","description":"social.friendship.infrastructure.persistence.sql.MessageSQLRepository.update","location":"friendship-service/social.friendship.infrastructure.persistence.sql/-message-s-q-l-repository/update.html","searchKeys":["update","open override fun update(entity: Message)","social.friendship.infrastructure.persistence.sql.MessageSQLRepository.update"]},{"name":"open override fun update(entity: User)","description":"social.friendship.infrastructure.persistence.sql.UserSQLRepository.update","location":"friendship-service/social.friendship.infrastructure.persistence.sql/-user-s-q-l-repository/update.html","searchKeys":["update","open override fun update(entity: User)","social.friendship.infrastructure.persistence.sql.UserSQLRepository.update"]},{"name":"open override val dbName: String","description":"social.friendship.infrastructure.persistence.sql.DatabaseCredentialsImpl.dbName","location":"friendship-service/social.friendship.infrastructure.persistence.sql/-database-credentials-impl/db-name.html","searchKeys":["dbName","open override val dbName: String","social.friendship.infrastructure.persistence.sql.DatabaseCredentialsImpl.dbName"]},{"name":"open override val host: String","description":"social.friendship.infrastructure.persistence.sql.DatabaseCredentialsImpl.host","location":"friendship-service/social.friendship.infrastructure.persistence.sql/-database-credentials-impl/host.html","searchKeys":["host","open override val host: String","social.friendship.infrastructure.persistence.sql.DatabaseCredentialsImpl.host"]},{"name":"open override val password: String","description":"social.friendship.infrastructure.persistence.sql.DatabaseCredentialsImpl.password","location":"friendship-service/social.friendship.infrastructure.persistence.sql/-database-credentials-impl/password.html","searchKeys":["password","open override val password: String","social.friendship.infrastructure.persistence.sql.DatabaseCredentialsImpl.password"]},{"name":"open override val port: String","description":"social.friendship.infrastructure.persistence.sql.DatabaseCredentialsImpl.port","location":"friendship-service/social.friendship.infrastructure.persistence.sql/-database-credentials-impl/port.html","searchKeys":["port","open override val port: String","social.friendship.infrastructure.persistence.sql.DatabaseCredentialsImpl.port"]},{"name":"open override val username: String","description":"social.friendship.infrastructure.persistence.sql.DatabaseCredentialsImpl.username","location":"friendship-service/social.friendship.infrastructure.persistence.sql/-database-credentials-impl/username.html","searchKeys":["username","open override val username: String","social.friendship.infrastructure.persistence.sql.DatabaseCredentialsImpl.username"]},{"name":"val content: String","description":"social.friendship.domain.Message.content","location":"friendship-service/social.friendship.domain/-message/content.html","searchKeys":["content","val content: String","social.friendship.domain.Message.content"]},{"name":"val from: User","description":"social.friendship.domain.FriendshipRequest.from","location":"friendship-service/social.friendship.domain/-friendship-request/from.html","searchKeys":["from","val from: User","social.friendship.domain.FriendshipRequest.from"]},{"name":"val from: User.UserID","description":"social.friendship.domain.FriendshipRequest.FriendshipRequestID.from","location":"friendship-service/social.friendship.domain/-friendship-request/-friendship-request-i-d/from.html","searchKeys":["from","val from: User.UserID","social.friendship.domain.FriendshipRequest.FriendshipRequestID.from"]},{"name":"val logger: Logger","description":"social.friendship.infrastructure.persistence.sql.FriendshipRequestSQLRepository.logger","location":"friendship-service/social.friendship.infrastructure.persistence.sql/-friendship-request-s-q-l-repository/logger.html","searchKeys":["logger","val logger: Logger","social.friendship.infrastructure.persistence.sql.FriendshipRequestSQLRepository.logger"]},{"name":"val messageId: UUID","description":"social.friendship.domain.Message.messageId","location":"friendship-service/social.friendship.domain/-message/message-id.html","searchKeys":["messageId","val messageId: UUID","social.friendship.domain.Message.messageId"]},{"name":"val receiver: User","description":"social.friendship.domain.Message.receiver","location":"friendship-service/social.friendship.domain/-message/receiver.html","searchKeys":["receiver","val receiver: User","social.friendship.domain.Message.receiver"]},{"name":"val sender: User","description":"social.friendship.domain.Message.sender","location":"friendship-service/social.friendship.domain/-message/sender.html","searchKeys":["sender","val sender: User","social.friendship.domain.Message.sender"]},{"name":"val to: User","description":"social.friendship.domain.FriendshipRequest.to","location":"friendship-service/social.friendship.domain/-friendship-request/to.html","searchKeys":["to","val to: User","social.friendship.domain.FriendshipRequest.to"]},{"name":"val to: User.UserID","description":"social.friendship.domain.FriendshipRequest.FriendshipRequestID.to","location":"friendship-service/social.friendship.domain/-friendship-request/-friendship-request-i-d/to.html","searchKeys":["to","val to: User.UserID","social.friendship.domain.FriendshipRequest.FriendshipRequestID.to"]},{"name":"val user1: User","description":"social.friendship.domain.Friendship.user1","location":"friendship-service/social.friendship.domain/-friendship/user1.html","searchKeys":["user1","val user1: User","social.friendship.domain.Friendship.user1"]},{"name":"val user1: User.UserID","description":"social.friendship.domain.Friendship.FriendshipID.user1","location":"friendship-service/social.friendship.domain/-friendship/-friendship-i-d/user1.html","searchKeys":["user1","val user1: User.UserID","social.friendship.domain.Friendship.FriendshipID.user1"]},{"name":"val user2: User","description":"social.friendship.domain.Friendship.user2","location":"friendship-service/social.friendship.domain/-friendship/user2.html","searchKeys":["user2","val user2: User","social.friendship.domain.Friendship.user2"]},{"name":"val user2: User.UserID","description":"social.friendship.domain.Friendship.FriendshipID.user2","location":"friendship-service/social.friendship.domain/-friendship/-friendship-i-d/user2.html","searchKeys":["user2","val user2: User.UserID","social.friendship.domain.Friendship.FriendshipID.user2"]},{"name":"val userId: User.UserID","description":"social.friendship.domain.User.userId","location":"friendship-service/social.friendship.domain/-user/user-id.html","searchKeys":["userId","val userId: User.UserID","social.friendship.domain.User.userId"]},{"name":"val value: String","description":"social.friendship.domain.User.UserID.value","location":"friendship-service/social.friendship.domain/-user/-user-i-d/value.html","searchKeys":["value","val value: String","social.friendship.domain.User.UserID.value"]},{"name":"val value: UUID","description":"social.friendship.domain.Message.MessageID.value","location":"friendship-service/social.friendship.domain/-message/-message-i-d/value.html","searchKeys":["value","val value: UUID","social.friendship.domain.Message.MessageID.value"]},{"name":"abstract fun addUser(user: User)","description":"social.user.application.UserService.addUser","location":"user-service/social.user.application/-user-service/add-user.html","searchKeys":["addUser","abstract fun addUser(user: User)","social.user.application.UserService.addUser"]},{"name":"abstract fun getUser(userID: User.UserID): User?","description":"social.user.application.UserService.getUser","location":"user-service/social.user.application/-user-service/get-user.html","searchKeys":["getUser","abstract fun getUser(userID: User.UserID): User?","social.user.application.UserService.getUser"]},{"name":"abstract fun publishEvent(event: DomainEvent)","description":"social.user.application.KafkaProducerVerticle.publishEvent","location":"user-service/social.user.application/-kafka-producer-verticle/publish-event.html","searchKeys":["publishEvent","abstract fun publishEvent(event: DomainEvent)","social.user.application.KafkaProducerVerticle.publishEvent"]},{"name":"abstract fun updateUser(user: User)","description":"social.user.application.UserService.updateUser","location":"user-service/social.user.application/-user-service/update-user.html","searchKeys":["updateUser","abstract fun updateUser(user: User)","social.user.application.UserService.updateUser"]},{"name":"class KafkaUserProducerVerticle : AbstractVerticle, KafkaProducerVerticle","description":"social.user.infrastructure.controller.event.KafkaUserProducerVerticle","location":"user-service/social.user.infrastructure.controller.event/-kafka-user-producer-verticle/index.html","searchKeys":["KafkaUserProducerVerticle","class KafkaUserProducerVerticle : AbstractVerticle, KafkaProducerVerticle","social.user.infrastructure.controller.event.KafkaUserProducerVerticle"]},{"name":"class RESTUserAPIVerticle(service: UserService) : AbstractVerticle, UserAPIVerticle","description":"social.user.infrastructure.controller.rest.RESTUserAPIVerticle","location":"user-service/social.user.infrastructure.controller.rest/-r-e-s-t-user-a-p-i-verticle/index.html","searchKeys":["RESTUserAPIVerticle","class RESTUserAPIVerticle(service: UserService) : AbstractVerticle, UserAPIVerticle","social.user.infrastructure.controller.rest.RESTUserAPIVerticle"]},{"name":"class User : Entity<User.UserID> ","description":"social.user.domain.User","location":"user-service/social.user.domain/-user/index.html","searchKeys":["User","class User : Entity<User.UserID> ","social.user.domain.User"]},{"name":"class UserSQLRepository : UserRepository","description":"social.user.infrastructure.persitence.sql.UserSQLRepository","location":"user-service/social.user.infrastructure.persitence.sql/-user-s-q-l-repository/index.html","searchKeys":["UserSQLRepository","class UserSQLRepository : UserRepository","social.user.infrastructure.persitence.sql.UserSQLRepository"]},{"name":"class UserServiceImpl(repository: UserRepository, kafkaProducer: KafkaProducerVerticle) : AbstractVerticle, UserService","description":"social.user.application.UserServiceImpl","location":"user-service/social.user.application/-user-service-impl/index.html","searchKeys":["UserServiceImpl","class UserServiceImpl(repository: UserRepository, kafkaProducer: KafkaProducerVerticle) : AbstractVerticle, UserService","social.user.application.UserServiceImpl"]},{"name":"const val DELETE_USER_BY_ID: String","description":"social.user.infrastructure.persitence.sql.SQLOperation.DELETE_USER_BY_ID","location":"user-service/social.user.infrastructure.persitence.sql/-s-q-l-operation/-d-e-l-e-t-e_-u-s-e-r_-b-y_-i-d.html","searchKeys":["DELETE_USER_BY_ID","const val DELETE_USER_BY_ID: String","social.user.infrastructure.persitence.sql.SQLOperation.DELETE_USER_BY_ID"]},{"name":"const val EMAIL: String","description":"social.user.infrastructure.persitence.sql.SQLColumns.EMAIL","location":"user-service/social.user.infrastructure.persitence.sql/-s-q-l-columns/-e-m-a-i-l.html","searchKeys":["EMAIL","const val EMAIL: String","social.user.infrastructure.persitence.sql.SQLColumns.EMAIL"]},{"name":"const val INSERT_USER: String","description":"social.user.infrastructure.persitence.sql.SQLOperation.INSERT_USER","location":"user-service/social.user.infrastructure.persitence.sql/-s-q-l-operation/-i-n-s-e-r-t_-u-s-e-r.html","searchKeys":["INSERT_USER","const val INSERT_USER: String","social.user.infrastructure.persitence.sql.SQLOperation.INSERT_USER"]},{"name":"const val SELECT_ALL_USERS: String","description":"social.user.infrastructure.persitence.sql.SQLOperation.SELECT_ALL_USERS","location":"user-service/social.user.infrastructure.persitence.sql/-s-q-l-operation/-s-e-l-e-c-t_-a-l-l_-u-s-e-r-s.html","searchKeys":["SELECT_ALL_USERS","const val SELECT_ALL_USERS: String","social.user.infrastructure.persitence.sql.SQLOperation.SELECT_ALL_USERS"]},{"name":"const val SELECT_USER_BY_ID: String","description":"social.user.infrastructure.persitence.sql.SQLOperation.SELECT_USER_BY_ID","location":"user-service/social.user.infrastructure.persitence.sql/-s-q-l-operation/-s-e-l-e-c-t_-u-s-e-r_-b-y_-i-d.html","searchKeys":["SELECT_USER_BY_ID","const val SELECT_USER_BY_ID: String","social.user.infrastructure.persitence.sql.SQLOperation.SELECT_USER_BY_ID"]},{"name":"const val UPDATE_USER: String","description":"social.user.infrastructure.persitence.sql.SQLOperation.UPDATE_USER","location":"user-service/social.user.infrastructure.persitence.sql/-s-q-l-operation/-u-p-d-a-t-e_-u-s-e-r.html","searchKeys":["UPDATE_USER","const val UPDATE_USER: String","social.user.infrastructure.persitence.sql.SQLOperation.UPDATE_USER"]},{"name":"const val USERNAME: String","description":"social.user.infrastructure.persitence.sql.SQLColumns.USERNAME","location":"user-service/social.user.infrastructure.persitence.sql/-s-q-l-columns/-u-s-e-r-n-a-m-e.html","searchKeys":["USERNAME","const val USERNAME: String","social.user.infrastructure.persitence.sql.SQLColumns.USERNAME"]},{"name":"constructor()","description":"social.user.infrastructure.controller.event.KafkaUserProducerVerticle.KafkaUserProducerVerticle","location":"user-service/social.user.infrastructure.controller.event/-kafka-user-producer-verticle/-kafka-user-producer-verticle.html","searchKeys":["KafkaUserProducerVerticle","constructor()","social.user.infrastructure.controller.event.KafkaUserProducerVerticle.KafkaUserProducerVerticle"]},{"name":"constructor()","description":"social.user.infrastructure.persitence.sql.UserSQLRepository.UserSQLRepository","location":"user-service/social.user.infrastructure.persitence.sql/-user-s-q-l-repository/-user-s-q-l-repository.html","searchKeys":["UserSQLRepository","constructor()","social.user.infrastructure.persitence.sql.UserSQLRepository.UserSQLRepository"]},{"name":"constructor(repository: UserRepository, kafkaProducer: KafkaProducerVerticle)","description":"social.user.application.UserServiceImpl.UserServiceImpl","location":"user-service/social.user.application/-user-service-impl/-user-service-impl.html","searchKeys":["UserServiceImpl","constructor(repository: UserRepository, kafkaProducer: KafkaProducerVerticle)","social.user.application.UserServiceImpl.UserServiceImpl"]},{"name":"constructor(service: UserService)","description":"social.user.infrastructure.controller.rest.RESTUserAPIVerticle.RESTUserAPIVerticle","location":"user-service/social.user.infrastructure.controller.rest/-r-e-s-t-user-a-p-i-verticle/-r-e-s-t-user-a-p-i-verticle.html","searchKeys":["RESTUserAPIVerticle","constructor(service: UserService)","social.user.infrastructure.controller.rest.RESTUserAPIVerticle.RESTUserAPIVerticle"]},{"name":"constructor(value: String)","description":"social.user.domain.User.UserID.UserID","location":"user-service/social.user.domain/-user/-user-i-d/-user-i-d.html","searchKeys":["UserID","constructor(value: String)","social.user.domain.User.UserID.UserID"]},{"name":"data class UserID(val value: String) : ID<String> ","description":"social.user.domain.User.UserID","location":"user-service/social.user.domain/-user/-user-i-d/index.html","searchKeys":["UserID","data class UserID(val value: String) : ID<String> ","social.user.domain.User.UserID"]},{"name":"fun connect(host: String, port: String, database: String, username: String, password: String)","description":"social.user.infrastructure.persitence.sql.UserSQLRepository.connect","location":"user-service/social.user.infrastructure.persitence.sql/-user-s-q-l-repository/connect.html","searchKeys":["connect","fun connect(host: String, port: String, database: String, username: String, password: String)","social.user.infrastructure.persitence.sql.UserSQLRepository.connect"]},{"name":"fun main(args: Array<String>)","description":"social.user.main","location":"user-service/social.user/main.html","searchKeys":["main","fun main(args: Array<String>)","social.user.main"]},{"name":"fun mySQLConnection(host: String, port: String, database: String, username: String, password: String): Connection","description":"social.user.infrastructure.persitence.sql.SQLUtils.mySQLConnection","location":"user-service/social.user.infrastructure.persitence.sql/-s-q-l-utils/my-s-q-l-connection.html","searchKeys":["mySQLConnection","fun mySQLConnection(host: String, port: String, database: String, username: String, password: String): Connection","social.user.infrastructure.persitence.sql.SQLUtils.mySQLConnection"]},{"name":"fun of(email: String, username: String): User","description":"social.user.domain.User.Companion.of","location":"user-service/social.user.domain/-user/-companion/of.html","searchKeys":["of","fun of(email: String, username: String): User","social.user.domain.User.Companion.of"]},{"name":"fun prepareStatement(connection: Connection, sqlStatement: String, vararg params: Any): PreparedStatement","description":"social.user.infrastructure.persitence.sql.SQLUtils.prepareStatement","location":"user-service/social.user.infrastructure.persitence.sql/-s-q-l-utils/prepare-statement.html","searchKeys":["prepareStatement","fun prepareStatement(connection: Connection, sqlStatement: String, vararg params: Any): PreparedStatement","social.user.infrastructure.persitence.sql.SQLUtils.prepareStatement"]},{"name":"fun userIDOf(email: String): User.UserID","description":"social.user.domain.User.Companion.userIDOf","location":"user-service/social.user.domain/-user/-companion/user-i-d-of.html","searchKeys":["userIDOf","fun userIDOf(email: String): User.UserID","social.user.domain.User.Companion.userIDOf"]},{"name":"interface KafkaProducerVerticle : Verticle","description":"social.user.application.KafkaProducerVerticle","location":"user-service/social.user.application/-kafka-producer-verticle/index.html","searchKeys":["KafkaProducerVerticle","interface KafkaProducerVerticle : Verticle","social.user.application.KafkaProducerVerticle"]},{"name":"interface UserAPIVerticle : Verticle","description":"social.user.infrastructure.controller.rest.UserAPIVerticle","location":"user-service/social.user.infrastructure.controller.rest/-user-a-p-i-verticle/index.html","searchKeys":["UserAPIVerticle","interface UserAPIVerticle : Verticle","social.user.infrastructure.controller.rest.UserAPIVerticle"]},{"name":"interface UserRepository : Repository<User.UserID, User> ","description":"social.user.application.UserRepository","location":"user-service/social.user.application/-user-repository/index.html","searchKeys":["UserRepository","interface UserRepository : Repository<User.UserID, User> ","social.user.application.UserRepository"]},{"name":"interface UserService : Service","description":"social.user.application.UserService","location":"user-service/social.user.application/-user-service/index.html","searchKeys":["UserService","interface UserService : Service","social.user.application.UserService"]},{"name":"object Companion","description":"social.user.infrastructure.controller.rest.RESTUserAPIVerticle.Companion","location":"user-service/social.user.infrastructure.controller.rest/-r-e-s-t-user-a-p-i-verticle/-companion/index.html","searchKeys":["Companion","object Companion","social.user.infrastructure.controller.rest.RESTUserAPIVerticle.Companion"]},{"name":"object Companion : Factory<User> ","description":"social.user.domain.User.Companion","location":"user-service/social.user.domain/-user/-companion/index.html","searchKeys":["Companion","object Companion : Factory<User> ","social.user.domain.User.Companion"]},{"name":"object SQLColumns","description":"social.user.infrastructure.persitence.sql.SQLColumns","location":"user-service/social.user.infrastructure.persitence.sql/-s-q-l-columns/index.html","searchKeys":["SQLColumns","object SQLColumns","social.user.infrastructure.persitence.sql.SQLColumns"]},{"name":"object SQLOperation","description":"social.user.infrastructure.persitence.sql.SQLOperation","location":"user-service/social.user.infrastructure.persitence.sql/-s-q-l-operation/index.html","searchKeys":["SQLOperation","object SQLOperation","social.user.infrastructure.persitence.sql.SQLOperation"]},{"name":"object SQLUtils","description":"social.user.infrastructure.persitence.sql.SQLUtils","location":"user-service/social.user.infrastructure.persitence.sql/-s-q-l-utils/index.html","searchKeys":["SQLUtils","object SQLUtils","social.user.infrastructure.persitence.sql.SQLUtils"]},{"name":"open override fun addUser(user: User)","description":"social.user.application.UserServiceImpl.addUser","location":"user-service/social.user.application/-user-service-impl/add-user.html","searchKeys":["addUser","open override fun addUser(user: User)","social.user.application.UserServiceImpl.addUser"]},{"name":"open override fun deleteById(id: User.UserID): User?","description":"social.user.infrastructure.persitence.sql.UserSQLRepository.deleteById","location":"user-service/social.user.infrastructure.persitence.sql/-user-s-q-l-repository/delete-by-id.html","searchKeys":["deleteById","open override fun deleteById(id: User.UserID): User?","social.user.infrastructure.persitence.sql.UserSQLRepository.deleteById"]},{"name":"open override fun findAll(): Array<User>","description":"social.user.infrastructure.persitence.sql.UserSQLRepository.findAll","location":"user-service/social.user.infrastructure.persitence.sql/-user-s-q-l-repository/find-all.html","searchKeys":["findAll","open override fun findAll(): Array<User>","social.user.infrastructure.persitence.sql.UserSQLRepository.findAll"]},{"name":"open override fun findById(id: User.UserID): User?","description":"social.user.infrastructure.persitence.sql.UserSQLRepository.findById","location":"user-service/social.user.infrastructure.persitence.sql/-user-s-q-l-repository/find-by-id.html","searchKeys":["findById","open override fun findById(id: User.UserID): User?","social.user.infrastructure.persitence.sql.UserSQLRepository.findById"]},{"name":"open override fun getUser(userID: User.UserID): User?","description":"social.user.application.UserServiceImpl.getUser","location":"user-service/social.user.application/-user-service-impl/get-user.html","searchKeys":["getUser","open override fun getUser(userID: User.UserID): User?","social.user.application.UserServiceImpl.getUser"]},{"name":"open override fun publishEvent(event: DomainEvent)","description":"social.user.infrastructure.controller.event.KafkaUserProducerVerticle.publishEvent","location":"user-service/social.user.infrastructure.controller.event/-kafka-user-producer-verticle/publish-event.html","searchKeys":["publishEvent","open override fun publishEvent(event: DomainEvent)","social.user.infrastructure.controller.event.KafkaUserProducerVerticle.publishEvent"]},{"name":"open override fun save(entity: User)","description":"social.user.infrastructure.persitence.sql.UserSQLRepository.save","location":"user-service/social.user.infrastructure.persitence.sql/-user-s-q-l-repository/save.html","searchKeys":["save","open override fun save(entity: User)","social.user.infrastructure.persitence.sql.UserSQLRepository.save"]},{"name":"open override fun start()","description":"social.user.application.UserServiceImpl.start","location":"user-service/social.user.application/-user-service-impl/start.html","searchKeys":["start","open override fun start()","social.user.application.UserServiceImpl.start"]},{"name":"open override fun start()","description":"social.user.infrastructure.controller.event.KafkaUserProducerVerticle.start","location":"user-service/social.user.infrastructure.controller.event/-kafka-user-producer-verticle/start.html","searchKeys":["start","open override fun start()","social.user.infrastructure.controller.event.KafkaUserProducerVerticle.start"]},{"name":"open override fun start()","description":"social.user.infrastructure.controller.rest.RESTUserAPIVerticle.start","location":"user-service/social.user.infrastructure.controller.rest/-r-e-s-t-user-a-p-i-verticle/start.html","searchKeys":["start","open override fun start()","social.user.infrastructure.controller.rest.RESTUserAPIVerticle.start"]},{"name":"open override fun update(entity: User)","description":"social.user.infrastructure.persitence.sql.UserSQLRepository.update","location":"user-service/social.user.infrastructure.persitence.sql/-user-s-q-l-repository/update.html","searchKeys":["update","open override fun update(entity: User)","social.user.infrastructure.persitence.sql.UserSQLRepository.update"]},{"name":"open override fun updateUser(user: User)","description":"social.user.application.UserServiceImpl.updateUser","location":"user-service/social.user.application/-user-service-impl/update-user.html","searchKeys":["updateUser","open override fun updateUser(user: User)","social.user.application.UserServiceImpl.updateUser"]},{"name":"val email: String","description":"social.user.domain.User.email","location":"user-service/social.user.domain/-user/email.html","searchKeys":["email","val email: String","social.user.domain.User.email"]},{"name":"val username: String","description":"social.user.domain.User.username","location":"user-service/social.user.domain/-user/username.html","searchKeys":["username","val username: String","social.user.domain.User.username"]},{"name":"val value: String","description":"social.user.domain.User.UserID.value","location":"user-service/social.user.domain/-user/-user-i-d/value.html","searchKeys":["value","val value: String","social.user.domain.User.UserID.value"]}]